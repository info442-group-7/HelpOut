{"version":3,"sources":["logo.png","components/SuggestedTasks/SuggestedTasksCardView.jsx","components/SuggestedTasks/SuggestedTasks.jsx","components/ClaimedTasks/ClaimedTasksCardView.jsx","components/ClaimedTasks/ClaimedTasksView.jsx","components/CreateNewRequest/CreateNewRequestView.jsx","FirebaseUtil/index.jsx","components/UserLogin/UserLoginView.jsx","components/MyRequests/MyRequestsCardView.jsx","components/MyRequests/MyOldRequests.jsx","components/MyRequests/MyRequestsView.jsx","components/SuggestedTasks/test.jsx","components/DashboardLayout/DashboardLayout.jsx","components/UserSignUp/UserSignUpView.jsx","components/HomePageView.jsx","components/AdditionalResources/AdditionalResourcesView.jsx","Auth.jsx","PrivateRoute.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","accept","styled","Button","background","color","padding","marginTop","size","fontSize","SuggestedTasksCardView","props","state","clicked","requests","requester","currentUserID","userZip","onClick","bind","handleClick","firebase","auth","onAuthStateChanged","user","id","console","log","uid","setState","this","requestsRef","database","ref","on","snapshot","value","val","requesterRef","off","previousState","succeed","mappedKeys","Object","keys","map","key","requestObj","requestItems","requesterObj","REQUEST_ZIP_CODE","TASK_ID","REQUESTER_ID","userFullName","userId","child","once","USER_FNAME","USER_LNAME","className","userID","name","task","Component","SuggestedTask","tasksRef","taskPushRef","push","set","CLAIMED_TIME","Date","toLocaleString","REQUEST_ID","TASK_STATUS","USER_ID","update","REQUEST_STATUS","notsucceed","placement","title","PlusCircleTwoTone","style","marginRight","width","height","margin","boxShadow","lineHeight","display","flexDirection","REQUEST_TITLE","REQUEST_DESCRIPTION","REQUEST_DATE","Search","Input","SuggestedTasksView","dog","counter","total","currentUser","handleChange","handleSubmit","updateZip","givenUserID","usersRef","USER_ZIP_CODE","concat","Array","event","target","alert","preventDefault","float","placeholder","enterButton","onSearch","clear","el","messagesEnd","React","abandon","complete","more","back","ClaimedTasksCardView","tasks","taskObj","mappedRequestKeys","mappedRequesterKeys","taskItems","requestValue","requesterValue","request","ClaimedTaskView","taskid","abandonClick","moreClick","backClick","remove","Results","CloseCircleTwoTone","twoToneColor","More","REQUESTER_PHONE_NUMBER","REQUESTER_STREET_ADDRESS","InfoCircleTwoTone","Complete","CheckCircleTwoTone","MoreInfo","justifyContent","ArrowLeftOutlined","REQUESTER_FNAME","REQUESTER_LNAME","ClaimedTasksView","cards","type","marginLeft","paddingBottom","paddingTop","paddingLeft","paddingRight","textAlign","borderRadius","fontWeight","a","rel","href","layout","Modal","confirm","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","CreateNewRequestView","useEffect","currentUserId","setID","setFName","setLName","setPhoneNumber","USER_PHONE_NUMBER","useState","firstName","lastName","phoneNumber","history","useHistory","onFinish","values","zip","REQUESTER_ZIP_CODE","address","pushRef","details","success","okText","onOk","onFinishFailed","errorInfo","Item","label","rules","message","TextArea","maxLength","offset","htmlType","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","UserLoginView","app","signInWithEmailAndPassword","password","authUserResponse","onFinishFaild","prefix","UserOutlined","LockOutlined","class","deletetask","MyRequestsCardView","count","userRequestItems","UserRequestCard","taskID","requestStatus","deleteRequest","isComplete","opacity","cclassName","MyRequestsView","old","doneRedirect","MyOldRequests","to","marginBottom","MyButton","MoreButton","Layout","Header","Content","Footer","Option","Select","UserSignUpView","createUserWithEmailAndPassword","USER_EMAIL","USER_DOB","dob","firstname","lastname","phonenum","USER_CITY","city","USER_STATE","USER_STREET_ADDRESS","street","zipcode","tailFormItemLayout","xs","sm","noStyle","len","pattern","Group","max","selected","min","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","HomePageView","users","userRef","taskRef","userObj","mappedtaskKeys","uObj","tObj","utObj","usertask","HomePage","usertaskObj","length","borderColor","backgroundColor","AdditionalResourcesView","flexWrap","AuthContext","createContext","AuthProvider","children","setCurrentUser","pending","setPending","Provider","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","menuTasks","Sider","Menu","SubMenu","menuRequests","menuWelcome","signOut","App","setUser","logoutMenuItem","useMemo","overlay","e","DownOutlined","minHeight","theme","mode","alignItems","defaultSelectedKeys","src","logo","alt","exact","path","ClaimedTasks","MyRequests","SuggestedTasks","SignUpView","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.827af941.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e12e79f5.png\";","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { PlusCircleTwoTone, VerticalRightOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport '../../App.css'\nimport { Card } from 'antd';\nimport firebase from 'firebase/app';\nimport 'firebase/database'; \nimport Grid from '@material-ui/core/Grid';\nimport { styled } from '@material-ui/core/styles';\n\n\n\nconst DoneButton = styled(Button)({\n    background: 'linear-gradient(45deg, #1760fb 30%, #45a5df 90%)',\n    color: 'white',\n    padding: '.5vmin 3vmin',\n    marginTop: '1vmin',\n    size: '5vmin',\n    fontSize: '1.4vmin'\n});\n\nconst accept = <span>Claim Task</span>;\n\nclass SuggestedTasksCardView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            clicked: true,\n            requests: [],\n            requester: [],\n            currentUserID: '',\n            userZip: ''\n\n        };\n        this.onClick = this.onClick.bind(this);\n        this.handleClick.bind(this);\n    }\n    \n\n    componentDidMount() {\n\n        firebase.auth().onAuthStateChanged(user => {\n\n            var id;\n      \n            if (user) {\n                console.log('This is the user: ', user.uid)\n                id = user.uid;\n                this.setState({currentUserID: id}); //get user id\n      \n            } else {\n              // No user is signed in.\n              console.log(\"user is not logged in!\")\n              this.setState({currentUserID: ''});\n            }\n        });\n      \n\n        this.requestsRef = firebase.database().ref('REQUEST');\n        this.requestsRef.on('value', (snapshot) => {\n            let value = snapshot.val();\n            this.setState({requests: value});\n        });\n\n        this.requesterRef = firebase.database().ref('REQUESTER');\n        this.requesterRef.on('value', (snapshot) => {\n            let value = snapshot.val();\n            this.setState({ requester: value });\n        });\n    }\n\n    componentWillUnmount() {\n        this.requestsRef.off();\n    }\n\n\n    handleClick() {\n        this.setState(previousState => {\n            return {\n                succeed: !previousState.succeed\n            };\n        });\n    }\n\n    // on click, do something about REQUEST.REQUEST_STATUS \n    onClick() {\n        console.log('clikced done!!');\n        this.setState({\n            clicked: false\n        });\n    }\n\n    render() {\n        if (!this.state.requests) return null; // or return whatever display u want. maybe a message that says no suggestions ??\n\n        let requestKeys = Object.keys(this.state.requests);\n        // recursively produce list of chirp objcts to render\n        let mappedKeys = requestKeys.map((key) => {\n            let requestObj = this.state.requests[key];\n            requestObj.id = key;\n            return requestObj;\n        });\n\n        let requesterKeys = Object.keys(this.state.requester);\n        let mappedRequesterKeys = requesterKeys.map((key) => {\n            let requesterObj = this.state.requester[key];\n            requesterObj.id = key;\n            return requesterObj;\n        });\n\n        let requestItems = mappedKeys.map((requestObj) => {\n            if(requestObj.REQUEST_ZIP_CODE == this.props.userZip && requestObj.TASK_ID == '' && requestObj.REQUESTER_ID != this.state.currentUserID) {\n                \n                let userId = requestObj.REQUESTER_ID;\n                var userFullName;\n\n                firebase.database().ref(\"USER\").child(userId).once('value', function(snapshot){\n                    let value = snapshot.val();\n                    userFullName = value.USER_FNAME + ' ' + value.USER_LNAME;\n                    \n                });\n                console.log(this.state.currentUserID);\n\n                return <div className=\"col\"><SuggestedTask userID= {this.state.currentUserID} name={userFullName} task={requestObj} /></div>\n            } else {\n                return; //show no requests if none are in?\n            }\n        });\n\n    \n\n        return (\n            <div className='flex-grid'>\n                {requestItems}\n            </div>\n        );\n    }\n\n}\n\n// A single task\nclass SuggestedTask extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            clicked: true,\n            requests: [],\n\n        };\n        this.onClick = this.onClick.bind(this);\n        this.handleClick.bind(this);\n    }\n\n    //claim task \n    handleClick() {\n        console.log('clicky in handleclick')\n        this.setState(previousState => {\n           return {\n                succeed: !previousState.succeed\n            };\n        });\n    }\n\n    // on click, do something about REQUEST.REQUEST_STATUS \n    onClick() {\n        console.log('clicked claim: claiming user id is: ' + this.props.userID);\n        this.setState({\n            clicked: false\n        });\n\n        //make new task\n        this.tasksRef = firebase.database().ref('CLAIMED_TASK');\n\n        let taskPushRef = this.tasksRef.push()\n        let key = taskPushRef.key;\n\n        \n        taskPushRef.set({\n            CLAIMED_TIME: new Date().toLocaleString(),\n            REQUESTER_ID: this.props.task.REQUESTER_ID,\n            REQUEST_ID: this.props.task.REQUEST_ID,\n            TASK_ID: key,\n            TASK_STATUS: \"incomplete\",\n            USER_ID: this.props.userID\n        })\n\n        firebase.database().ref('CLAIMED_TASK').child(key)\n        .update({TASK_STATUS: 'incomplete', TASK_ID: key });\n\n        //mark request as claimed, set task id\n        this.requestsRef = firebase.database().ref('REQUEST');\n        firebase.database().ref('REQUEST').child('/' + this.props.task.REQUEST_ID + '/')\n        .update({REQUEST_STATUS: 'claimed', TASK_ID: key, USER_ID: this.props.userID }); \n    \n     }\n\n\n    render () {\n\n        //connect these to db values, like status\n        const Results = () => (\n            <Grid container justify=\"center\">\n                <DoneButton size=\"small\" onClick={this.onClick} >Done!</DoneButton>\n            </Grid>\n        )\n\n        const succeed = (\n            <div className='claimedText'>Claimed!</div>\n        )\n\n        const notsucceed = (\n            <div>\n                <Tooltip placement=\"bottom\" title={accept}>\n                    <Button onClick={this.onClick}>\n                        <PlusCircleTwoTone style={{ fontSize: '40px' }} />\n                    </Button>\n                </Tooltip>\n            </div>\n        )\n\n        let task = this.props.task;\n\n\n\n        // need to do something about user id / requester id. get it and cross reference their info from REQUESTER and USER\n        return (\n            <div style={{ marginRight: '50%' }}>\n            <Card className=\"cardStyle\" style={{ width: '350px', height: 'auto', margin: '30px', boxShadow: \"0 8px 6px -6px #aaaaaa\", lineHeight: \"24px\", display: 'flex', flexDirection: 'column'}}>\n                <h5 className=\"cardTitle\">{task.REQUEST_TITLE}</h5>\n                <hr className=\"cardLineBreak\"></hr>\n                <div className=\"cardDesDiv\">\n                    <p className=\"cardDescription\">{task.REQUEST_DESCRIPTION} </p>\n                </div>\n                <p className=\"cardRequester\">{this.props.name} </p>\n                <p className=\"cardRequested\">Created on {task.REQUEST_DATE}</p>\n                <div className=\"suggestedTaskButton\">\n                    <div onClick={this.handleClick.bind(this)}> {this.state.succeed ? succeed : notsucceed} </div>\n                </div>\n            </Card>\n            </div>\n\n        )\n    }\n\n\n}\n\n\nexport default SuggestedTasksCardView;\n\n\n\n\n//<Container maxWidth=\"xs\">\n//    <Cards className={useStyles.root} variant=\"outlined\">\n//        <CardContent>\n//\n//        </CardContent>\n//        <CardActions>\n//            <Grid\n//                container\n//                direction=\"row\"\n//                justify=\"space-between\"\n//                alignItems=\"center\"\n//            >\n//                <div onClick={this.handleClick.bind(this)}>\n//                    {this.state.succeed ? succeed : notsucceed}\n //               </div>\n//\n\n  //          </Grid>\n\n    //    </CardActions>\n\n      //  {this.state.succeed ? null : <Results />}\n  //  </Cards>\n//</Container>\n\n\n\n\n\n","import React, { Component, useState } from 'react';\nimport SuggestedTasksCardView from \"./SuggestedTasksCardView\";\nimport '../../App.css'\nimport { Button, Form, Input, Radio } from 'antd';\nimport { InfoCircleTwoTone, CheckCircleTwoTone, CloseCircleTwoTone } from '@ant-design/icons';\nimport firebase from 'firebase/app';\nimport 'firebase/database'; \nimport './SuggestedTasks.css'\n\n\nconst { Search } = Input;\n\nclass SuggestedTasksView extends React.Component {\n  \n\n  constructor() {\n    super()\n    this.state = { dog: \"fido\", counter: 5, total: [0, 1, 2, 3], value: '', userZip: '', currentUser: '' };\n    this.onClick = this.onClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateZip = this.updateZip.bind(this);\n  }\n\n  // scrollToBottom = () => {\n  //   this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  // }\n  componentDidMount() {\n    // this.scrollToBottom();\n\n    firebase.auth().onAuthStateChanged(user => {\n      var givenUserID;\n      if (user) {\n          givenUserID = user.uid;\n          this.setState({currentUser: givenUserID})\n          console.log(this.state.currentUser)\n\n          // if not set by search function\n          if (this.state.userZip == '') {\n            this.usersRef = firebase.database().ref('USER').child(this.state.currentUser);\n            this.usersRef.on('value', (snapshot) => {\n                let value = snapshot.val();\n                this.setState({userZip: value.USER_ZIP_CODE})\n                console.log('userZip in componentdidmount is ' + this.state.userZip)\n            })\n          }\n      } else{\n          console.log('not logged in')\n          this.setState({currentUser:null})\n      }\n  });\n  }\n  componentDidUpdate() {\n    // this.scrollToBottom();\n  }\n\n  onClick() {\n    this.setState({\n      counter: this.state.counter + 1,\n      total: this.state.total.concat([...new Array(4)]),\n\n    });\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  updateZip(value) {\n    console.log('new zipcode entered is ' + value)\n    this.setState({userZip: value})\n  }\n\n  render() {\n    return (\n      <div style={{ }} >\n        <div className=\"headerDiv\"><h1 className=\"cardHeader\">Tasks in My Area ({this.state.userZip})</h1>\n        <p className=\"disclaimer\">Below are requests in your zipcode! If there are no cards shown, all requests in your area have been fulfilled. Try a different zip code to find new requests.</p>\n          <div \n            id=\"zipcode-search\">\n            <Search\n              style={{float:'center'}}\n              placeholder='98195'\n              enterButton=\"Search\"\n              size=\"large\"\n              onSearch={value => this.updateZip(value)}\n            />\n          </div>\n        </div>\n        \n          {/* {this.state.total.map((value) => */}\n                <SuggestedTasksCardView  userZip={this.state.userZip} currentUser={this.state.currentUser} />\n          {/* )} */}\n\n        {/* <form onSubmit={this.handleSubmit}>\n        <label>\n        My zip code is: \n          <input className=\"zipCodeInput\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        \n      </form> */}\n        <div style={{ float: \"left\", clear: \"both\" }}\n          ref={(el) => { this.messagesEnd = el; }}>\n        </div>\n      </div >\n    );\n  }\n}\nconst Greeting = props => <h1>{props.greeting}</h1>;\n\n\n\nexport default SuggestedTasksView;\n\n//     <MoreButton variant=\"outlined\" size=\"large\" onClick={this.onClick}>More</MoreButton>\n\n// onClick() {\n//  this.setState({\n//    counter: this.state.counter + 1,\n\n//  });\n//  let first = this.state.total[this.state.total.length - 1] + 1\n//  this.setState(prevState => ({\n//    total: [...prevState.total, first],\n//  }))\n//  this.setState(prevState => ({\n//   total: [...prevState.total, first + 1],\n//  }))\n//  this.setState(prevState => ({\n//    total: [...prevState.total, first + 2],\n//  }))\n//  this.setState(prevState => ({\n//    total: [...prevState.total, first + 3],\n//  }))\n//}\n\n\n\n\n\n/*\n<Grid container className={useStyles.root} spacing={2}>\n<Grid item xs={12}>\n  <Grid container justify=\"center\" spacing={2}>\n    {this.state.total.map((value) => (\n      <Grid key={value} item>\n        <YourRequestsCardView />\n      </Grid>\n    ))}\n  </Grid>\n</Grid>\n\n</Grid>\n*/","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Card } from 'antd';\nimport '../../App.css'\nimport { InfoCircleTwoTone, EditTwoTone, CheckCircleTwoTone, ArrowLeftOutlined, CloseCircleTwoTone } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n\nconst abandon = <span>Give up...</span>;\nconst complete = <span>Done!</span>;\nconst more = <span>More...</span>;\nconst back = <span>Back</span>;\n\nclass ClaimedTasksCardView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicked: true,\n            currentUser: '', tasks: [], requests: [], requester: []\n        };\n        this.onClick = this.onClick.bind(this);\n        this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(function (user) {\n            if (user) {\n                // User is signed in.\n                console.log('signed in')\n                this.setState({ currentUser: user.uid })\n\n            } else {\n                // No user is signed in.\n                console.log('not signed in')\n            }\n\n        }.bind(this))\n\n        this.tasksRef = firebase.database().ref('CLAIMED_TASK');\n        this.tasksRef.on('value', (snapshot) => {\n            let value = snapshot.val();\n            this.setState({ tasks: value });\n        });\n\n        this.requestsRef = firebase.database().ref('REQUEST');\n        this.requestsRef.on('value', (snapshot) => {\n            let value = snapshot.val();\n            this.setState({ requests: value });\n        });\n\n        this.requesterRef = firebase.database().ref('REQUESTER');\n        this.requesterRef.on('value', (snapshot) => {\n            let value = snapshot.val();\n            this.setState({ requester: value });\n        });\n    }\n\n    testUser() {\n        }\n\n        componentWillUnmount() {\n            this.tasksRef.off();\n        };\n\n\n        handleClick() {\n            this.setState(previousState => {\n                return {\n                    succeed: !previousState.succeed\n                };\n            });\n        }\n\n        // on click, do something about REQUEST.REQUEST_STATUS \n        onClick() {\n            console.log('clikced done!!');\n            this.setState({\n                clicked: false\n            });\n        }\n\n        render() {\n            if (!this.state.tasks) return null;\n\n            let taskKeys = Object.keys(this.state.tasks);\n            let mappedKeys = taskKeys.map((key) => {\n                let taskObj = this.state.tasks[key];\n                taskObj.id = key;\n                return taskObj;\n            });\n\n            let requestKeys = Object.keys(this.state.requests);\n            let mappedRequestKeys = requestKeys.map((key) => {\n                let requestObj = this.state.requests[key];\n                requestObj.id = key;\n                return requestObj;\n            });\n\n            let requesterKeys = Object.keys(this.state.requester);\n            let mappedRequesterKeys = requesterKeys.map((key) => {\n                let requesterObj = this.state.requester[key];\n                requesterObj.id = key;\n                return requesterObj;\n            });\n\n            let taskItems = mappedKeys.map((taskObj) => {\n                let requestValue = ''\n                let requesterValue = ''\n                if (this.state.currentUser == taskObj.USER_ID && taskObj.TASK_STATUS == 'incomplete') {\n                    console.log(taskObj.TASK_STATUS)\n\n                    mappedRequestKeys.map((requestObj) => {\n                        if (requestObj.TASK_ID == taskObj.TASK_ID) {\n                            requestValue = requestObj\n                        }\n                    })\n\n                    mappedRequesterKeys.map((requesterObj) => {\n                        if (requesterObj.REQUESTER_ID == taskObj.REQUESTER_ID) {\n                            requesterValue = requesterObj\n                        }\n                    })\n\n                    return <div className='col'> <ClaimedTaskView request={requestValue} task={taskObj} requester={requesterValue} /></div>\n                }\n            });\n\n\n            return (\n                <div className=\"flex-grid\">\n                    {taskItems}\n                </div>\n            );\n\n        }\n    }\n\nclass ClaimedTaskView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { clicked: true, taskid: '', task: this.props.task, succeed: null };\n        this.onClick = this.onClick.bind(this);\n        this.handleClick.bind(this);\n        this.abandonClick = this.abandonClick.bind(this)\n        this.moreClick = this.moreClick.bind(this)\n        this.backClick = this.backClick.bind(this)\n\n    }\n    handleClick() {\n        this.setState(previousState => {\n            return {\n                succeed: !previousState.succeed\n            };\n        });\n    }\n    moreClick() {\n        console.log(\"succeed\")\n        this.setState({\n                succeed: \"true\",\n        }\n        );\n    }\n    backClick() {\n        console.log(\"succeed\")\n        this.setState({\n                succeed: null,\n        }\n        );\n    }\n    onClick() {\n        this.setState({\n            clicked: false,\n        });\n\n        this.tasksRef = firebase.database().ref('CLAIMED_TASK');\n        firebase.database().ref('CLAIMED_TASK').child('/' + this.props.request.TASK_ID + '/')\n        .update({TASK_STATUS: 'complete' });\n\n        //mark as claimed\n        this.requestsRef = firebase.database().ref('REQUEST');\n        firebase.database().ref('REQUEST').child('/' + this.props.request.REQUEST_ID + '/')\n        .update({REQUEST_STATUS: 'claimed' });        \n    }\n\n    abandonClick() {\n\n        this.requestsRef = firebase.database().ref('REQUEST');\n        firebase.database().ref('REQUEST').child('/' + this.props.task.REQUEST_ID + '/')\n        .update({TASK_ID: '', REQUEST_STATUS:'open' });\n        \n        this.tasksRef = firebase.database().ref('CLAIMED_TASK');\n        firebase.database().ref('CLAIMED_TASK').child('/' + this.props.task.TASK_ID + '/')\n            .remove()\n\n\n\n    }\n\n    render() {\n        let request = this.props.request;\n        let task = this.props.task;\n        let requester = this.props.requester;\n\n\n    \n\n    const Results = () => (\n        <Tooltip placement=\"bottom\" title={abandon}>\n            <Button onClick={this.abandonClick} ><CloseCircleTwoTone twoToneColor=\"#eb2f96\" style={{ fontSize: '40px' }} /></Button>\n        </Tooltip>\n    )\n    const succeed = (\n        <div style={{ display: 'flex', flexDirection: 'column' }}>Phone Number: { requester.REQUESTER_PHONE_NUMBER} <br /> Address:  { requester.REQUESTER_STREET_ADDRESS}<br></br></div>\n    )\n    const More = () => (\n        <div>\n            <Tooltip placement=\"bottom\" title={more}>\n                <Button onClick={this.moreClick}>\n                    <InfoCircleTwoTone style={{ fontSize: '40px' }} />\n                </Button>\n            </Tooltip>\n          \n        </div>\n    )\n    const Complete = () => (\n        <div>\n            <Tooltip placement=\"bottom\" title={complete}>\n                <Button onClick={this.onClick}>\n                    <CheckCircleTwoTone twoToneColor=\"#52c41a\" style={{ fontSize: '40px' }} />\n                </Button>\n            </Tooltip>\n        </div>\n    )\n    const MoreInfo = () => (\n        <div style={{ display: 'flex', justifyContent: 'spaceBetween', flexDirection: 'row' }}>\n            \n            <Tooltip placement=\"bottom\" title={back}>\n                <Button onClick={this.backClick} style={{marginRight:\"2%\"}}>\n                    <ArrowLeftOutlined twoToneColor=\"#52c41a\" style={{ fontSize: '40px' }} />\n                </Button>\n            </Tooltip>\n            <div style={{ display: 'flex', flexDirection: 'column' }}>Phone Number: { requester.REQUESTER_PHONE_NUMBER} <br /> Address:  { requester.REQUESTER_STREET_ADDRESS}<br></br></div>\n\n\n        </div>\n    )\n\n\n    if(this.state.clicked) {\n        return (\n            <div style={{ marginRight: '50%' }}>\n\n                <Card className=\"cardStyle\" style={{ width: '350px', boxShadow: \"0 8px 6px -6px #aaaaaa\", lineHeight: \"24px\", display: 'flex', flexDirection: 'column' }}>\n                    <h5 className=\"cardTitle\"> {request.REQUEST_TITLE}</h5>\n                    <hr className=\"cardLineBreak\"></hr>\n                    <div className=\"cardDesDiv\">\n                        <p className=\"cardDescription\">{request.REQUEST_DESCRIPTION} </p>\n                    </div>\n                    <p className=\"cardRequester\">{requester.REQUESTER_FNAME}  {requester.REQUESTER_LNAME}</p>\n                    <p className=\"cardRequested\">Accepted on {task.CLAIMED_TIME}</p>\n                    <div style={{ display: 'flex', justifyContent: 'center', marginTop: 'auto' }}>\n                        <div> {this.state.succeed ? null : <Results />}</div>\n                        <div> {this.state.succeed ? null : <More />}</div>\n                        <div> {this.state.succeed ? null : <Complete />}</div>\n                        <div> {this.state.succeed ?  <MoreInfo />: null}</div>\n\n                        \n                    </div>\n                </Card>\n            </div>\n        );\n    }\n        else {\n    return null;\n}\n    }\n}\n\nexport default ClaimedTasksCardView;\n\n//  <Grid container justify=\"center\">\n//<DoneButton size=\"small\" onClick={this.onClick} >Done!</DoneButton>\n\n//</Grid>\n\n ///   <MoreButton size=\"small\"> More... </MoreButton>\n ///                <MyButton size=\"small\" onClick={this.onClick} >Give up...</MyButton>\n\n\n\n//<Container maxWidth=\"xs\">\n//    <Cards className={useStyles.root} variant=\"outlined\">\n//        <CardContent>\n//\n//\n//        </CardContent>\n//        <CardActions>\n//            <Grid\n//                container\n//                direction=\"row\"\n//                justify=\"space-between\"\n//                alignItems=\"center\"\n//            >\n//                <div onClick={this.handleClick.bind(this)}>\n//                    {this.state.succeed ? succeed : notsucceed}\n //               </div>\n//\n\n  //          </Grid>\n\n    //    </CardActions>\n\n      //  {this.state.succeed ? null : <Results />}\n  //  </Cards>\n//</Container>\n\n\n\n\n","import React, { Component } from 'react';\nimport ClaimedTasksCardView from \"./ClaimedTasksCardView\";\nimport { Button } from 'antd';\n\nimport '../../App.css'\n\nclass ClaimedTasksView extends React.Component {\n\n  constructor() {\n    super()\n    this.state = { cards: 1, dog: \"fido\", counter: 5, total: [0, 1, 2, 3, 4, 5] };\n    this.onClick = this.onClick.bind(this);\n  }\n  \n\n  /*  scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n  \n    componentDidMount() {\n      this.scrollToBottom();\n    }\n  \n    componentDidUpdate() {\n      this.scrollToBottom();\n    }\n  */\n\n  onClick() {\n    this.setState({\n      counter: this.state.counter + 1,\n      total: this.state.total.concat([...new Array(5)]),\n    });\n  }\n\n  updateCards() {\n    this.setState({\n      cards: this.state.cards + 1\n    });\n  }\n\n  render() {\n    return (\n      <div style={{  }} >\n        <div className=\"headerDiv\"><h1 className=\"cardHeader\">Claimed Tasks</h1>\n        <p className=\"disclaimer\">Below are your claimed tasks. If there are no tasks below, it means you have not yet claimed a request. Click on the button below to find new tasks!</p>\n        \n        </div>\n                <ClaimedTasksCardView />\n        <div style={{ display: 'flex' }}>\n            <Button type=\"primary\" style={{\n              marginLeft: '12vw',\n              fontSize: '30px', marginTop: '50px', paddingBottom: '50px', paddingTop: '18px', size: 'large', paddingLeft: '30px', paddingRight: '30px', textAlign: 'center', borderRadius: '5px', fontWeight: 'bolder'\n            }}a rel=\"noopener noreferrer\" href=\"/SuggestedTasks\">Find new tasks </Button></div>\n        </div>\n     \n    );\n  }\n}\nexport default ClaimedTasksView;\n/*\n<div style={{ float: \"left\", clear: \"both\" }}\n          ref={(el) => { this.messagesEnd = el; }}>\n        </div>\n        */\n\n//     <MoreButton variant=\"outlined\" size=\"large\" onClick={this.onClick}>More</MoreButton>\n\n// onClick() {\n//  this.setState({\n//    counter: this.state.counter + 1,\n\n//  });\n//  let first = this.state.total[this.state.total.length - 1] + 1\n//  this.setState(prevState => ({\n//    total: [...prevState.total, first],\n//  }))\n//  this.setState(prevState => ({\n//   total: [...prevState.total, first + 1],\n//  }))\n//  this.setState(prevState => ({\n//    total: [...prevState.total, first + 2],\n//  }))\n//  this.setState(prevState => ({\n//    total: [...prevState.total, first + 3],\n//  }))\n//}\n\n\n\n\n\n/*\n<Grid container className={useStyles.root} spacing={2}>\n<Grid item xs={12}>\n  <Grid container justify=\"center\" spacing={2}>\n    {this.state.total.map((value) => (\n      <Grid key={value} item>\n        <YourRequestsCardView />\n      </Grid>\n    ))}\n  </Grid>\n</Grid>\n\n</Grid>\n*/","import { Form, Input, InputNumber, Modal, Button } from 'antd';\nimport React, { Component, useState, useEffect } from 'react';\nimport { CheckCircleOutlined } from '@ant-design/icons';\nimport { Redirect, Link, useHistory } from 'react-router-dom';\nimport firebase from 'firebase/app';\n\nconst { confirm } = Modal;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\n// validation messages for form\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not validate email!',\n    number: '${label} is not a validate number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n\n// creates the request view\nconst CreateNewRequestView = () => {\n\n\n  useEffect(() => {\n\n    firebase.auth().onAuthStateChanged(user => {\n\n      var currentUserId;\n\n      if (user) {\n          console.log('This is the user: ', user.uid)\n          currentUserId = user.uid;\n          setID(currentUserId);\n        // User is signed in.\n        firebase.database().ref(\"USER\").child(currentUserId).once('value', function(snapshot){\n          let user = snapshot.val();\n          setFName(user.USER_FNAME);\n          setLName(user.USER_LNAME);\n          setPhoneNumber(user.USER_PHONE_NUMBER);\n          // userTest = user;\n          // setRequester(user);\n          // console.log(user)\n          // console.log('user test is ' + userTest)\n          // console.log ('user is ' + requesterUser.USER_FNAME)\n          // console.log ('user is ' + user.USER_FNAME)\n          // console.log('user type is + ' + user.type)\n          // console.log()\n    \n        });\n\n      } else {\n        // No user is signed in.\n        console.log(\"user is not logged in!\")\n        currentUserId = '';\n      }\n  });\n\n\n  })\n\n  const [firstName, setFName] = useState('');\n  const [lastName, setLName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n\n  const history = useHistory();\n\n  // redirects/reroutes to request page\n  const doneRedirect = function() {\n    history.push(\"/MyRequests\");\n  };\n\n  const [userID, setID] = useState('');\n\n\n  // on successful submission, creates modal \n  const onFinish = values => {\n    console.log('Success:', values);\n    console.log(values.zip)\n    // let userTest = firebase.database().ref(\"USER\");\n    // userTest.push({user_city: \"TESTING\"})  \n\n// src: https://stackoverflow.com/questions/38768576/in-firebase-when-using-push-how-do-i-get-the-unique-id-and-store-in-my-databas\n\n\n\n\n\n    let requesterRef = firebase.database().ref(\"REQUESTER\");\n      requesterRef.push({\n        REQUESTER_ZIP_CODE: values.zip,\n        REQUESTER_FNAME: firstName,\n        REQUESTER_LNAME: lastName,\n        REQUESTER_PHONE_NUMBER: phoneNumber,\n        REQUESTER_STREET_ADDRESS: values.address,\n        REQUESTER_ID: userID\n\n      })\n\n    \n    \n\n    let requestRef = firebase.database().ref(\"REQUEST\");\n\n\n    var pushRef = requestRef.push();\n    var key = pushRef.key;\n    pushRef.set({\n      REQUESTER_ID: userID, \n      REQUEST_DATE: new Date().toLocaleString(),\n      REQUEST_DESCRIPTION: values.details,\n      REQUEST_STATUS: \"open\", // to start\n      // REQUEST_TIME: 'mock - add date function here',\n      REQUEST_TITLE: values.title,\n      REQUEST_ZIP_CODE: values.zip,\n      USER_ID: '', //ONCE SOMEONe accepts, this is updated\n      TASK_ID: '',\n      REQUEST_ID: key \n    })\n\n    success();\n  };\n\n  // if error connecting to DB\n  const onFinishFailed = errorInfo => {\n    // add in error message\n    // connect this state to db (promise, return)\n    console.log('Failed:', errorInfo);\n  };\n\n  // modal informing user that their submission was successful, onclick will redirect them\n  function success() {\n\n    Modal.success({\n      okText:\"Done\",\n      title: 'Submit successful!',\n      // content: 'View your requests to see your new entry.',\n      onOk() {\n        doneRedirect();\n      }\n    });\n  }\n\n\n  // renders actual page & form\n  return (\n    <div>\n      <h2 style={{fontSize: 40, fontWeight: 700}}>Create a new request</h2>\n      <Form id=\"create-request\" {...layout} style={{width:800}} name=\"nest-messages\" onFinish={onFinish} onFinishFailed={onFinishFailed} validateMessages={validateMessages}>\n        <Form.Item name={['title']} label=\"I need help with \" rules={[{ required: true, message:'Your request title is required!' }]}>\n          <Input style={{width: 500}}/>\n        </Form.Item>\n        <Form.Item name={['details']} label=\"Could you give additional details?\" rules={[{ required: true, message:'A description is required!'}]}>\n          <Input.TextArea style={{width: 500}} />\n        </Form.Item>\n        {/* <Form.Item name={['user', 'age']} label=\"This task can be categorized as\" rules={[{ type: 'number', min: 0, max: 99 }]}>\n          <InputNumber />\n        </Form.Item> */}\n        <Form.Item name={['address']} label=\"My address is\" rules={[{ required: true, message:'Address is required!'}]}>\n          <Input style={{ width: 500 }} />\n        </Form.Item>\n        <Form.Item name={['zip']} label=\"Zipcode\" maxLength='5' rules={[{ required: true }]}>\n          <Input style={{ width: 100, textAlign: 'center' }} maxLength=\"5\" placeholder=\"12345\" />\n\n        </Form.Item>\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }} >\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default CreateNewRequestView;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCjJR5NV13iDYluMYu-EQQZMIlZ2DwhW9A\",\n    authDomain: \"help-out-info-442.firebaseapp.com\",\n    databaseURL: \"https://help-out-info-442.firebaseio.com\",\n    projectId: \"help-out-info-442\",\n    storageBucket: \"help-out-info-442.appspot.com\",\n    messagingSenderId: \"487992417747\",\n    appId: \"1:487992417747:web:af6e6e755c8a62f3c4e326\",\n    measurementId: \"G-2YLQWRCY46\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;\n","import React, { Component } from 'react';\nimport firebase from \"../../FirebaseUtil\";\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Redirect, Link, useHistory } from 'react-router-dom';\nimport './UserLoginView.css';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst UserLoginView = () => {\n\n  const history = useHistory();\n\n  const onFinish = async (values) => {\n    console.log('Success:', values);\n    const authUserResponse = await firebase.app().auth().signInWithEmailAndPassword(values.email, values.password)\n    console.log(authUserResponse);\n    history.push('/HomePageView')\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const redirectToSignUp = function() {\n    console.log('pushing to signup')\n    history.push(`/signup`);\n  }\n\n// put util file \n// on finish call firebase\n  return (\n    <div id=\"login-container\">\n      <h1>Welcome to Helpout!</h1>\n      <h2>Please log in or sign up to continue.</h2>\n\n      <Form\n      name=\"normal_login\"\n      className=\"login-form\"\n      onFinish={onFinish}\n      onFinishFaild={onFinishFailed}\n    >\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            // message: 'Please input your email!',\n          },\n        ]}\n      >\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} type='email' placeholder=\"Email\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            // message: 'Please input your Password!',\n          },\n        ]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n     <Form.Item>\n\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Log in\n        </Button>\n      </Form.Item>\n      </Form>\n      <hr class='form-divider'></hr>\n      <p>Don't have an account yet?</p>\n      <Button type=\"secondary\" onClick={redirectToSignUp}>Sign up</Button>\n    </div>\n  );\n};\n// const { Tab, UserName, Password, Mobile, Captcha, Submit } = Login;\n\n// class LoginDemo extends React.Component {\n//   state = {\n//     notice: '',\n//     type: 'tab2',\n//     autoLogin: true,\n//   };\n//   onSubmit = (err, values) => {\n//     console.log('value collected ->', {\n//       ...values,\n//       autoLogin: this.state.autoLogin,\n//     });\n//     if (this.state.type === 'tab1') {\n//       this.setState(\n//         {\n//           notice: '',\n//         },\n//         () => {\n//           if (!err && (values.username !== 'admin' || values.password !== '888888')) {\n//             setTimeout(() => {\n//               this.setState({\n//                 notice: 'The combination of username and password is incorrect!',\n//               });\n//             }, 500);\n//           }\n//         }\n//       );\n//     }\n//   };\n//   onTabChange = key => {\n//     this.setState({\n//       type: key,\n//     });\n//   };\n//   changeAutoLogin = e => {\n//     this.setState({\n//       autoLogin: e.target.checked,\n//     });\n//   };\n//   render() {\n//     return (\n//       <div className=\"login-warp\">\n//         <Login\n//           defaultActiveKey={this.state.type}\n//           onTabChange={this.onTabChange}\n//           onSubmit={this.onSubmit}\n//         >\n//           <Tab key=\"tab1\" tab=\"Account\">\n//             {this.state.notice && (\n//               <Alert\n//                 style={{ marginBottom: 24 }}\n//                 message={this.state.notice}\n//                 type=\"error\"\n//                 showIcon\n//                 closable\n//               />\n//             )}\n//             <UserName name=\"username\" />\n//             <Password name=\"password\" />\n//           </Tab>\n//           <Tab key=\"tab2\" tab=\"Mobile\">\n//             <Mobile name=\"mobile\" />\n//             <Captcha onGetCaptcha={() => console.log('Get captcha!')} name=\"captcha\" />\n//           </Tab>\n//           <div>\n//             <Checkbox checked={this.state.autoLogin} onChange={this.changeAutoLogin}>\n//               Keep me logged in\n//             </Checkbox>\n//             <a style={{ float: 'right' }} href=\"\">\n//               Forgot password\n//             </a>\n//           </div>\n//           <Submit>Login</Submit>\n//           <div>\n//             Other login methods\n//             <span className=\"icon icon-alipay\" />\n//             <span className=\"icon icon-taobao\" />\n//             <span className=\"icon icon-weibo\" />\n//             <a style={{ float: 'right' }} href=\"\">\n//               Register\n//             </a>\n//           </div>\n//         </Login>\n//       </div>\n//     );\n//   }\n// }\n\n export default UserLoginView;","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Card } from 'antd';\nimport '../../App.css'\nimport { EditTwoTone, CheckCircleTwoTone, CloseCircleTwoTone } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst deletetask = <span>Delete</span>;\nconst edit = <span>Edit</span>;\n\nclass MyRequestsCardView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { clicked: true, \n            currentUser: null,\n            requests: [],\n            count: 0\n        };\n        this.onClick = this.onClick.bind(this);\n        this.handleClick.bind(this);\n\n    }\n\n    componentDidMount() {\n\n        firebase.auth().onAuthStateChanged(user => {\n\n            var currentUserId;\n      \n            if (user) {\n                console.log('This is the user: ', user.uid)\n                currentUserId = user.uid;\n                this.setState({currentUser : currentUserId})\n              // User is signed in.\n            } else {\n              // No user is signed in.\n              console.log(\"user is not logged in!\")\n              currentUserId = null;\n            }\n        });\n       \n        this.requestsRef = firebase.database().ref('REQUEST');\n        this.requestsRef.on('value', (snapshot) => {\n            let value = snapshot.val();\n            this.setState({requests: value});\n        });\n\n        this.requesterRef = firebase.database().ref('REQUESTER');\n        this.requesterRef.on('value', (snapshot) => {\n            let value = snapshot.val();\n            this.setState({ requester: value });\n        });\n    }\n\n    componentWillUnmount() {\n        this.requestsRef.off();\n    }\n\n\n    handleClick() {\n        this.setState(previousState => {\n            return {\n                succeed: !previousState.succeed\n            };\n        });\n    }\n\n    onClick() {\n        this.setState({\n            clicked: false\n        });\n    }\n\n    render() {\n        if (!this.state.requests) return null; // or return whatever display u want. maybe a message that says no suggestions ??\n\n        let requestKeys = Object.keys(this.state.requests);\n\n        let mappedKeys = requestKeys.map((key) => {\n            let requestObj = this.state.requests[key];\n            requestObj.id = key;\n            return requestObj;\n        });\n        \n        let userRequestItems = mappedKeys.map((requestObj) => {\n            if(requestObj.REQUESTER_ID == this.state.currentUser) {\n                return <div className=\"col\"><UserRequestCard request={requestObj} /></div> \n            }\n        }); //else return null?\n\n\n        // let userRequestItems = mappedKeys.map((requestObj) => {\n        //     // if(requestObj = )\n        //     console.log(requestObj)\n        //     return <div className=\"col\"><UserRequestCard request={requestObj} /></div>\n        // });\n\n        return (\n            <div className='flex-grid'>\n                {userRequestItems}\n            </div>\n        );\n    }\n}\n\n// A single task\nclass UserRequestCard extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = { clicked: true, taskID: null, requestStatus: ''  };\n        this.onClick = this.onClick.bind(this);\n        this.handleClick.bind(this);\n        this.deleteRequest.bind(this);\n    }\n\n    handleClick() {\n        this.setState(previousState => {\n            return {\n                succeed: !previousState.succeed\n            };\n        });\n    }\n\n    onClick() {\n        this.deleteRequest();\n\n        this.setState({\n            clicked: false\n        });\n        console.log('request deleted!')\n    }\n\n\n    // will delete request from database\n     deleteRequest() {\n        let requestObj = this.props.request;\n\n        return firebase.database().ref('REQUEST').child(requestObj.id).remove();\n     }\n\n     componentDidMount() {\n        let requestObj = this.props.request;\n\n        this.requesterRef = firebase.database().ref('REQUEST').child(requestObj.id);\n        this.requesterRef.on('value', (snapshot) => {\n            let value = snapshot.val();\n            if (value) {\n                this.setState({\n                    taskID: value.TASK_ID,\n                    requestStatus: value.REQUEST_STATUS\n                })\n            }\n        });\n     }\n\n\n\n     isComplete () {\n        if (this.state.requestStatus == 'open') {\n            if (this.state.taskID == \"\" || this.state.taskID == null) {\n                return (<p>OPEN, UNCLAIMED</p>)\n            } else {\n                return (<p>CLAIMED, IN PROGRESS</p>)\n            }\n        } else {\n            return (<p>COMPLETED</p>)\n        }\n    }\n\n\n    render () {\n        \n        const Results = () => (\n            <Tooltip placement=\"bottom\" title={deletetask}>\n                <Button onClick={this.onClick} ><CloseCircleTwoTone twoToneColor=\"#eb2f96\" style={{ fontSize: '40px' }} /></Button>\n            </Tooltip>\n        )\n     \n        let request = this.props.request;\n\n\n        if (this.state.clicked) {\n            return (\n             \n                <div style={{ marginRight: '50%' }}>\n                <Card className=\"cardStyle\" style={{ width: '350px', boxShadow: \"0 8px 6px -6px #aaaaaa\", lineHeight: \"24px\", display: 'flex', flexDirection: 'column' }}>\n                    <h5 className=\"cardTitle\">{request.REQUEST_TITLE}</h5>\n                    <hr className=\"cardLineBreak\"></hr>\n                    <div className=\"cardDesDiv\">\n                    <p className=\"cardDescription\">{request.REQUEST_DESCRIPTION} </p>\n                        </div>\n                    <div>\n                        {this.isComplete()}\n                    </div>\n                    {/* <p className=\"cardRequester\">Requester's name</p> */}\n                    <p className=\"cardRequested\">Requested on {request.REQUEST_DATE}</p>\n                    <div style={{ display: 'flex', justifyContent: 'center', marginTop: 'auto' }}>\n                        <div> {this.state.succeed ? null : <Results />}</div>\n\n\n                    </div>\n                </Card>\n            </div>\n            );\n        }\n        else {\n            return null;\n        }\n\n    }\n\n\n}\n\n\nexport default MyRequestsCardView;\n\n\n//<Container maxWidth=\"xs\">\n//    <Cards className={useStyles.root} variant=\"outlined\">\n//        <CardContent>\n//\n//\n//        </CardContent>\n//        <CardActions>\n//            <Grid\n//                container\n//                direction=\"row\"\n//                justify=\"space-between\"\n//                alignItems=\"center\"\n//            >\n//                <div onClick={this.handleClick.bind(this)}>\n//                    {this.state.succeed ? succeed : notsucceed}\n //               </div>\n//\n\n  //          </Grid>\n\n    //    </CardActions>\n\n      //  {this.state.succeed ? null : <Results />}\n  //  </Cards>\n//</Container>\n\n\n\n\n\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Card } from 'antd';\nimport s from '../../App.css'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nconst MyButton = styled(Button)({\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    color: 'white',\n    padding: '.4vmin 3vmin',\n    size: '5vmin',\n    fontSize: '1.4vmin'\n});\n\nconst DoneButton = styled(Button)({\n    background: 'linear-gradient(45deg, #1760fb 30%, #45a5df 90%)',\n    color: 'white',\n    padding: '.5vmin 3vmin',\n    marginTop: '1vmin',\n    size: '5vmin',\n    fontSize: '1.4vmin'\n});\n\nconst MoreButton = styled(Button)({\n    background: 'linear-gradient(45deg, #0059ff 30%, #0088ff 90%)',\n    color: 'white',\n    padding: '.4vmin 4vmin',\n    size: '5vmin',\n    fontSize: '1.4vmin'\n});\n\nclass MyRequestsCardView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { clicked: true };\n        this.onClick = this.onClick.bind(this);\n        this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.setState(previousState => {\n            return {\n                succeed: !previousState.succeed\n            };\n        });\n    }\n\n    onClick() {\n        this.setState({\n            clicked: false\n        });\n    }\n\n    render() {\n        const Results = () => (\n            <Grid container justify=\"center\">\n                <DoneButton size=\"small\" onClick={this.onClick} >Done!</DoneButton>\n            </Grid>\n        )\n        const succeed = (\n            <div>(253) 310-3409<br></br></div>\n        )\n        const notsucceed = (\n            <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                <MoreButton size=\"small\"> Edit </MoreButton>\n                <MyButton size=\"small\" onClick={this.onClick} >Delete</MyButton>\n            </div>\n        )\n\n        if (this.state.clicked) {\n            return (\n                <div>\n                    <Card className=\"cardStyle\" style={{ opacity: '.75',width: \"36vmin\", height: \"34vh\", boxShadow: \"0 8px 6px -6px #aaaaaa\", margin: \"5%\", lineHeight: \"2vmin\" }}>\n                        <h5 className=\"cardTitle\">My Old Request</h5>\n                        <p cclassName=\"cardDescription\"><br />Lorem ipsum dolor sit amet, consectetur adipis0ing elit, sed do eiusmod tempor\n                            incididunt ut labore </p>\n                        <p className=\"cardRequested\">Completed 10 days ago</p>\n                   \n       \n                    </Card >\n                </div >\n            );\n        }\n        else {\n            return null;\n        }\n    }\n}\n\nexport default MyRequestsCardView;\n\n\n//<Container maxWidth=\"xs\">\n//    <Cards className={useStyles.root} variant=\"outlined\">\n//        <CardContent>\n//\n//\n//        </CardContent>\n//        <CardActions>\n//            <Grid\n//                container\n//                direction=\"row\"\n//                justify=\"space-between\"\n//                alignItems=\"center\"\n//            >\n//                <div onClick={this.handleClick.bind(this)}>\n//                    {this.state.succeed ? succeed : notsucceed}\n //               </div>\n//\n\n  //          </Grid>\n\n    //    </CardActions>\n\n      //  {this.state.succeed ? null : <Results />}\n  //  </Cards>\n//</Container>\n\n\n\n\n\n","import React, { Component } from 'react';\nimport MyRequestsCardView from \"./MyRequestsCardView\";\nimport MyOldRequests from './MyOldRequests'\nimport { Button, Modal} from 'antd';\nimport { useHistory, NavLink } from 'react-router-dom';\n\n\n\nclass MyRequestsView extends React.Component {\n\n  constructor() {\n    super()\n    this.state = { dog: \"fido\", counter: 5, total: [0, 1, 2], old: false };\n    this.onClick = this.onClick.bind(this);\n    this.handleClick.bind(this);\n    this.doneRedirect = this.doneRedirect.bind(this);\n  }\n  handleClick() {\n    this.setState(previousState => {\n      return {\n        succeed: !previousState.succeed\n      };\n    });\n  }\n\n  /*  scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n  \n    componentDidMount() {\n      this.scrollToBottom();\n    }\n  \n    componentDidUpdate() {\n      this.scrollToBottom();\n    }\n  \n  */\n\n  onClick() {\n    this.setState({\n      counter: this.state.counter + 1,\n      total: this.state.total.concat([...new Array(5)]),\n    });\n  }\n\n    // modal informing user that their submission was successful, onclick will redirect them\n    success() {\n\n      Modal.success({\n        okText:\"Done\",\n        title: 'You have successfully created an account!',\n        // content: 'View your requests to see your new entry.',\n        onOk() {\n          this.doneRedirect();\n        }\n      });\n    }\n\n    // redirects/reroutes to request page\n    doneRedirect () {\n      let history = useHistory();\n      history.push(\"/HomePageView\");\n    };\n\n\n  render() {\n    const succeed = (\n      this.state.total.map((value) =>\n          <MyOldRequests />\n        )\n    )\n    const notsucceed = (\n      <div>\n\n        <Button onClick={this.handleClick.bind(this)} shape=\"round\" type=\"primary\" ghost style={{\n          marginLeft: '5vmin', alignItems: \"center\",\n          marginTop: '16vmin', paddingTop: '1vmin', paddingBottom: \"3.2vmin\"\n        }}>Show past requests </Button>\n      </div>\n    )\n\n    return (\n      <div>\n        <div className=\"headerDiv\">\n          <h1 className=\"cardHeader\">My Requests</h1>\n          <p className=\"disclaimer\">Below are the requests you have made. If there are no request cards displayed, then you have not yet made a request. Click on the button below to create your request!</p>\n          <div style={{ display: 'flex' }}>\n            \n          <NavLink to=\"/CreateRequest\">\n            <Button type=\"primary\" style={{\n              marginLeft: '2vmin',\n              fontSize: '3vmin', marginTop: '0vmin', marginBottom: '3vmin', marginLeft: '3.7vmin', paddingBottom: '6vmin', paddingTop: '1', size: 'large', paddingLeft: '6vmin', paddingRight: '8vmin', textAlign: 'center'\n            }}>Create Request </Button>\n            </NavLink>\n          </div>\n        </div>\n        <div style={{ }}>\n        \n                <MyRequestsCardView />\n          \n            {/* {this.state.succeed ? succeed : notsucceed} */}\n     \n\n        </div>\n      </div>\n    );\n  }\n}\nexport default MyRequestsView;\n/*\n<div style={{ float: \"left\", clear: \"both\" }}\n          ref={(el) => { this.messagesEnd = el; }}>\n        </div>\n        */\n\n//     <MoreButton variant=\"outlined\" size=\"large\" onClick={this.onClick}>More</MoreButton>\n\n// onClick() {\n//  this.setState({\n//    counter: this.state.counter + 1,\n\n//  });\n//  let first = this.state.total[this.state.total.length - 1] + 1\n//  this.setState(prevState => ({\n//    total: [...prevState.total, first],\n//  }))\n//  this.setState(prevState => ({\n//   total: [...prevState.total, first + 1],\n//  }))\n//  this.setState(prevState => ({\n//    total: [...prevState.total, first + 2],\n//  }))\n//  this.setState(prevState => ({\n//    total: [...prevState.total, first + 3],\n//  }))\n//}\n\n\n\n\n\n/*\n<Grid container className={useStyles.root} spacing={2}>\n<Grid item xs={12}>\n  <Grid container justify=\"center\" spacing={2}>\n    {this.state.total.map((value) => (\n      <Grid key={value} item>\n        <YourRequestsCardView />\n      </Grid>\n    ))}\n  </Grid>\n</Grid>\n\n</Grid>\n*/","import React, { Component } from \"react\";\nimport { Carousel } from \"antd\";\nimport { SmileOutlined } from '@ant-design/icons';\nimport { Button } from \"antd\"\nimport SuggestedTasksCard from \"./SuggestedTasksCardView\"\nimport { Card, Col, Row } from 'antd';\nimport { styled } from '@material-ui/core/styles';\n\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\n\nconst MyButton = styled(Button)({\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    color: 'white',\n    padding: '.4vmin 3vmin',\n    size: '5vmin',\n    fontSize: '1.4vmin'\n});\n\nconst DoneButton = styled(Button)({\n    background: 'linear-gradient(45deg, #1760fb 30%, #45a5df 90%)',\n    color: 'white',\n    padding: '.5vmin 3vmin',\n    marginTop: '1vmin',\n    size: '5vmin',\n    fontSize: '1.4vmin'\n});\n\nconst MoreButton = styled(Button)({\n    background: 'linear-gradient(45deg, #0059ff 30%, #0088ff 90%)',\n    color: 'white',\n    padding: '.4vmin 4vmin',\n    size: '5vmin',\n    fontSize: '1.4vmin'\n});\n\n\nclass Test extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n        this.handleClick.bind(this);\n        this.next = this.next.bind(this);\n        this.previous = this.previous.bind(this);\n        this.carousel = React.createRef();\n        this.state = { clicked: true , dog: \"fido\", counter: 0, counterEnd: 3, total: [0, 1, 2, 3, 4], fruits: [\"Banana\", \"Orange\", \"Lemon\", \"Apple\", \"Mango\", \"Pear\", \"Grapes\", \"Lime\", \"Persimmon\", \"Tomato\", \"Cucumber\", \"Watermelon\"] };\n\n    }\n    handleClick() {\n        this.setState(previousState => {\n            return {\n                succeed: !previousState.succeed\n            };\n        });\n    }\n\n    onClick() {\n        this.setState({\n            clicked: false\n        });\n    }\n    next() {\n        this.carousel.next();\n    }\n    previous() {\n        this.carousel.prev();\n    }\n\n    \n\n    render() {\n        const props = {\n            dots: true,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1\n        };\n        function remove(el) {\n            let element = el;\n            element.remove();\n            \n        }\n        let start = 0;\n        let end = 4;\n        let fruitsize = this.state.fruits.length/4;\n        console.log(fruitsize)\n        let fruitArray = [...new Array(fruitsize)]\n    \n        return (\n            <div>\n         \n                <div style={{marginLeft:'22vmin'}}>\n\n                <Carousel ref={node => (this.carousel = node)} {...props}>\n                   \n                {fruitArray.map((value) =>\n                                    <div>\n                                    <div className=\"site-card-wrapper\">\n                                            <Row gutter={16} >\n                                                {this.state.fruits.slice(start, end).map((value) =>\n                                                    <Col span={5.5} key={value}>\n                                                        <Card className=\"cardStyle\" style={{ width: \"36vmin\", height: \"34vh\", boxShadow: \"0 8px 6px -6px #aaaaaa\", margin: \"5%\", lineHeight: \"2vmin\" }}>\n                        <h5 className=\"cardTitle\">Getting groceries for gramma</h5>\n                        <p cclassName=\"cardDescription\"><br />Lorem ipsum dolor sit amet, consectetur adipis0ing elit, sed do eiusmod tempor\n                            incididunt ut labore </p>\n                        <p className=\"cardRequested\">Made 10 days ago</p>\n                        <div className=\"buttons\" ><div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                <MoreButton size=\"small\" a rel=\"noopener noreferrer\" href=\"/\"> Edit </MoreButton>\n                        <MyButton size=\"small\" onClick={console.log(\"not working\")} >Delete</MyButton>\n            </div> </div> {value} \n                    </Card >\n                                                    </Col>)}\n                                            </Row>\n                                            {start = start + 4}\n                                            {end = end + 4}\n                                        </div>\n                                    </div>\n                                    \n                                    )\n                                    \n                                    }\n                 \n                </Carousel>\n                           \n\n\n               \n                </div>\n                <div style={{display:'flex', justifyContent: 'center'}}>\n                            <Button size=\"large\" icon={<LeftOutlined />}  onClick={this.previous}></Button>\n\n<Button size=\"large\" icon={<RightOutlined />}  onClick={this.next}></Button>\n                                </div>\n                                <div id=\"i\" onClick=\"remove(this)\">Sample</div>\n\n            </div>\n        );\n    }\n}\nexport default Test;","import React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\n\nconst { Header, Content, Footer } = Layout;\n\nconst DashboardLayout = (props) => {\n    return (\n        <Layout className=\"layout\">\n            <Header>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n                <Menu.Item key=\"1\">Home</Menu.Item>\n                <Menu.Item key=\"2\">Tasks</Menu.Item>\n                <Menu.Item key=\"3\">Requests</Menu.Item>\n                <Menu.Item key=\"4\">Additional Resources</Menu.Item>\n            </Menu>\n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\n                <Breadcrumb.Item>List</Breadcrumb.Item>\n                <Breadcrumb.Item>App</Breadcrumb.Item>\n            </Breadcrumb>\n            <div className=\"site-layout-content\">Content</div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n        </Layout>\n        // mountNode,\n        )\n    }\n\n    export default DashboardLayout;\n","import { Form, Input, Select, Tooltip, Button, Modal } from 'antd';\nimport React, { Component } from 'react';\nimport firebase from \"../../FirebaseUtil\";\nimport { useHistory } from 'react-router-dom';\nimport './UserSignUpView.css';\n\n\n\nconst { Option } = Select;\n\nconst UserSignUpView = () => {\n  const onFinish = async (values) => {\n    console.log('Received values of form: ', values);\n    const authUserResponse = await firebase.app().auth().createUserWithEmailAndPassword(values.email, values.password)\n    console.log('authuserresponse is ' + authUserResponse)\n    const newUserSnapshot = await firebase.database().ref('USER/' + authUserResponse.user.uid).set({  //reference to collection \n      // username: name,\n      USER_EMAIL: values.email,\n      USER_DOB: values.dob, \n      USER_FNAME: values.firstname,\n      USER_LNAME: values.lastname,\n      USER_ID: authUserResponse.user.uid,\n      USER_PHONE_NUMBER: values.phonenum,\n      USER_CITY: values.city,\n      USER_STATE: values.state,\n      USER_STREET_ADDRESS: values.street,\n      USER_ZIP_CODE: values.zipcode,\n      // profile_picture : imageUrl\n    });\n    history.push(\"/HomePageView\");\n    // console.log(newUserSnapshot.val())\n    // success();\n\n  };\n\n  //   // if error connecting to DB\n  //   const onFinishFailed = errorInfo => {\n  //     // add in error message\n  //     // connect this state to db (promise, return)\n  //     console.log('Failed:', errorInfo);\n  //   };\n\n  // // modal informing user that their submission was successful, onclick will redirect them\n  // function success() {\n\n  //   Modal.success({\n  //     okText:\"Done\",\n  //     title: 'Register successful!',\n  //     content: 'Thank you for creating an account.',\n  //     onOk() {\n  //       //something\n  //     }\n  //   });\n  //   console.log('modal should be appearing');\n\n  // }\n\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n    },\n  };\n\n  const history = useHistory();\n\n  const returnRedirect = function() {\n    history.push(\"/login\");\n  };\n\n  return (\n    <div id=\"signup-form-container\">\n      <h1 id=\"signup-heading\">Create an account</h1>\n      <p id=\"signup-return\"><a onClick={returnRedirect}>Return to login</a></p>\n      <Form name=\"complex-form\" onFinish={onFinish} labelCol={{ span: 8 }} wrapperCol={{ span: 16 }}>\n\n        <Form.Item label=\"Email\" name={'email'} rules={[{ required: true }]}>\n          <Form.Item\n            name=\"email\"\n            noStyle\n            rules={[{ required: true, message: 'Email is required' }]}\n          >\n            <Input style={{ width: 320 }} placeholder=\"Please input\" type=\"email\"/>\n          </Form.Item>\n        </Form.Item>\n        \n        <Form.Item label=\"Name\" name={'firstname'} rules={[{ required: true }]}>\n          <Form.Item\n            name=\"firstname\"\n            noStyle\n            rules={[{ required: true, message: 'Name is required' }]}\n          >\n            <Input style={{ width: 160 }} placeholder=\"First name\"/>\n          </Form.Item>\n          <Form.Item\n            name=\"lastname\"\n            noStyle\n            rules={[{ required: true, message: 'Name is required' }]}\n          >\n            <Input style={{ width: 160 }} placeholder=\"Last name\"/>\n          </Form.Item>\n\n          {/* <Tooltip title=\"Useful information\">\n            <a href=\"#API\" style={{ margin: '0 8px' }}>\n              Need Help?\n            </a>\n          </Tooltip> */}\n        </Form.Item>\n        <Form.Item label=\"Phone number\" name={'phonenum'} rules={[{ required: true }]}>\n          <Form.Item\n            name=\"phonenum\"\n\n            noStyle\n            rules={[{ len: 12, pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\", required: true, message: 'Phone number is required. Please format as: xxx-xxx-xxxx' }]}\n          >\n            <Input style={{ width: 160 }}  maxLength= '12' placeholder=\"206-123-4567\" type=\"tel\"/>\n          </Form.Item>\n        </Form.Item>\n        <Form.Item label=\"Date of birth\" name={'dob'} rules={[{ required: true }]}>\n          <Form.Item\n            name=\"dob\"\n\n            noStyle\n            rules={[{ required: true, message: 'Date of birth is required.' }]}\n          >\n            <Input style={{ width: 160 }} placeholder=\"09/01/1997\" type=\"date\"/>\n          </Form.Item>\n        </Form.Item>\n\n        <Form.Item label=\"Address\" name={'street'} rules={[{ required: true }]}>\n          <Input.Group>\n            <Form.Item\n              name={'street'}\n              noStyle\n              rules={[{ required: true, message: 'Your street address is required.' }]}\n            >\n              <Input style={{  }} placeholder=\"Street address\"/>\n            </Form.Item>\n  \n            <Form.Item\n              name={'city'}\n              noStyle\n              rules={[{ required: true, message: 'Your city is required.' }]}\n            >\n              <Input style={{ width: '50%' }} placeholder=\"City\" />\n            </Form.Item>\n            <Form.Item\n              name={'zipcode'}\n              noStyle\n              rules={[{ required: true, message: 'Your zipcode is required.' }]}\n            >\n              <Input style={{ width: '15%' }} type='number' max={99999}/>\n            </Form.Item>\n\n            <Form.Item\n              name={'state'}\n              noStyle\n              rules={[{ required: true, message: 'Your state is required.' }]}\n            >\n              <Select placeholder=\"State\" style={{ width: '30%'}}name=\"state\" id=\"state\">\n                <Option value=\"\" selected=\"selected\">Select a State</Option>\n                <Option value=\"AL\">Alabama</Option>\n                <Option value=\"AK\">Alaska</Option>\n                <Option value=\"AZ\">Arizona</Option>\n                <Option value=\"AR\">Arkansas</Option>\n                <Option value=\"CA\">California</Option>\n                <Option value=\"CO\">Colorado</Option>\n                <Option value=\"CT\">Connecticut</Option>\n                <Option value=\"DE\">Delaware</Option>\n                <Option value=\"DC\">District Of Columbia</Option>\n                <Option value=\"FL\">Florida</Option>\n                <Option value=\"GA\">Georgia</Option>\n                <Option value=\"HI\">Hawaii</Option>\n                <Option value=\"ID\">Idaho</Option>\n                <Option value=\"IL\">Illinois</Option>\n                <Option value=\"IN\">Indiana</Option>\n                <Option value=\"IA\">Iowa</Option>\n                <Option value=\"KS\">Kansas</Option>\n                <Option value=\"KY\">Kentucky</Option>\n                <Option value=\"LA\">Louisiana</Option>\n                <Option value=\"ME\">Maine</Option>\n                <Option value=\"MD\">Maryland</Option>\n                <Option value=\"MA\">Massachusetts</Option>\n                <Option value=\"MI\">Michigan</Option>\n                <Option value=\"MN\">Minnesota</Option>\n                <Option value=\"MS\">Mississippi</Option>\n                <Option value=\"MO\">Missouri</Option>\n                <Option value=\"MT\">Montana</Option>\n                <Option value=\"NE\">Nebraska</Option>\n                <Option value=\"NV\">Nevada</Option>\n                <Option value=\"NH\">New Hampshire</Option>\n                <Option value=\"NJ\">New Jersey</Option>\n                <Option value=\"NM\">New Mexico</Option>\n                <Option value=\"NY\">New York</Option>\n                <Option value=\"NC\">North Carolina</Option>\n                <Option value=\"ND\">North Dakota</Option>\n                <Option value=\"OH\">Ohio</Option>\n                <Option value=\"OK\">Oklahoma</Option>\n                <Option value=\"OR\">Oregon</Option>\n                <Option value=\"PA\">Pennsylvania</Option>\n                <Option value=\"RI\">Rhode Island</Option>\n                <Option value=\"SC\">South Carolina</Option>\n                <Option value=\"SD\">South Dakota</Option>\n                <Option value=\"TN\">Tennessee</Option>\n                <Option value=\"TX\">Texas</Option>\n                <Option value=\"UT\">Utah</Option>\n                <Option value=\"VT\">Vermont</Option>\n                <Option value=\"VA\">Virginia</Option>\n                <Option value=\"WA\">Washington</Option>\n                <Option value=\"WV\">West Virginia</Option>\n                <Option value=\"WI\">Wisconsin</Option>\n                <Option value=\"WY\">Wyoming</Option>\n              </Select>\n            </Form.Item>\n\n          </Input.Group>\n        </Form.Item>\n\n\n        <Form.Item\n          name=\"Password\"\n          label=\"Password\"\n          rules={[\n    \n            // { min: 6, message: 'Password must be minimum 5 characters.' },\n            {\n              required: true,\n              // message: 'Please input your password!',\n              min: 6\n            },\n          ]}\n          hasFeedback\n        >\n          <Input.Password style={{ width: 320}} />\n        </Form.Item>\n\n        <Form.Item\n          name=\"confirm\"\n          label=\"Confirm Password\"\n          dependencies={['Password']}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: 'Please confirm your password!',\n            },\n            // { min: 6, message: 'Password must be minimum 5 characters.' },\n            ({ getFieldValue }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue('Password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject('The two passwords that you entered do not match!');\n              },\n            }),\n          ]}\n        >\n          <Input.Password style={{ width: 320}}/>\n        </Form.Item>\n\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n        </Form.Item>\n\n      </Form>\n    </div>\n  );\n};\n\n\n\nexport default UserSignUpView;","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport '../App.css'\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n\nclass HomePageView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicked: true,\n            currentUser: null,\n            users: [],\n            tasks: []\n        };\n    };\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n\n            var currentUserId;\n\n            if (user) {\n                console.log('This is the user: ', user.uid)\n                currentUserId = user.uid;\n                this.setState({ currentUser: currentUserId })\n                // User is signed in.\n            } else {\n                // No user is signed in.\n                console.log(\"user is not logged in!\")\n                currentUserId = null;\n            }\n        })\n        this.userRef = firebase.database().ref('USER');\n        this.userRef.on('value', (snapshot) => {\n            let value = snapshot.val();\n            this.setState({ users: value });\n        });\n\n        this.taskRef = firebase.database().ref('CLAIMED_TASK');\n        this.taskRef.on('value', (snapshot) => {\n            let value = snapshot.val();\n            this.setState({ tasks: value });\n        });\n    };\n\n    componentWillUnmount() {\n        this.userRef.off();\n    }\n\n\n    render() {\n\n\n        let userKeys = Object.keys(this.state.users);\n        let mappedKeys = userKeys.map((key) => {\n            let userObj = this.state.users[key];\n            userObj.id = key;\n            return userObj;\n        });\n\n        let taskKeys = Object.keys(this.state.tasks);\n        let mappedtaskKeys = taskKeys.map((key) => {\n            let taskObj = this.state.tasks[key];\n            taskObj.id = key;\n            return taskObj;\n        });\n\n        let uObj = ''\n        let userItems = mappedKeys.map((userObj) => {\n            if (this.state.currentUser == userObj.USER_ID) {\n                uObj = userObj;\n            }\n        });\n\n        let tObj = []\n        let taskItems = mappedtaskKeys.map((taskObj) => {\n            if (taskObj.TASK_STATUS == 'complete')\n            tObj.push(taskObj);\n        });\n\n        let utObj = []\n        let utaskItems = mappedtaskKeys.map((taskObj) => {\n            if (taskObj.USER_ID == this.state.currentUser & taskObj.TASK_STATUS == 'complete')\n            utObj.push(taskObj);\n        });\n\n        return (\n            <div>\n                <div><HomePage user={uObj} task={tObj} usertask={utObj}/></div>\n            </div>\n        );\n    }\n}\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    render() {\n        let userObj = this.props.user;\n        let taskObj = this.props.task\n        let usertaskObj = this.props.usertask;\n        console.log(usertaskObj.length)\n\n\n\n        return (\n            <div className=\"homepageBody\">\n                <div className=\"greeting\">\n                    <h1 className=\"homePageHeader\">Hello, {userObj.USER_FNAME}!</h1>\n                    <div id=\"homepage-descrip\">\n                        <p>Our community has completed <b>{taskObj.length} task(s) </b>so far to help the people in need.</p>\n                        <p>You have helped <b>{usertaskObj.length} people </b>so far. Would you like to make it <b>{usertaskObj.length + 1} </b>today?</p>\n                    </div>\n                </div>\n                <div className='options'>\n                    <div className='needHelp'>\n                        <h1 className='homePageSubH'>I want to help out...</h1>\n                        <div className=\"homePageButtons\" style={{ display: 'flex' }}>\n                            <Button className=\"bar-button\" type=\"primary\" style={{\n                                fontSize: '3vmin',\n                                marginTop: '1vmin',\n                                paddingBottom: '6vmin',\n                                paddingTop: '2vmin',\n                                width: '110%',\n                                textAlign: 'center',\n                                borderRadius: '5px',\n                                fontWeight: 'bolder'\n                            }} href=\"ClaimedTasks\" >Claimed tasks </Button>\n\n                            <Button className=\"bar-button\" type=\"primary\" style={{\n                                fontSize: '3vmin',\n                                marginTop: '1vmin',\n                                paddingBottom: '6vmin',\n                                paddingTop: '2vmin',\n                                width: '110%',\n                                textAlign: 'center',\n                                borderRadius: '5px',\n                                fontWeight: 'bolder'\n                            }} href=\"SuggestedTasks\">Find more tasks</Button>\n                        </div>\n                    </div>\n                    <div className='helpOthers'>\n                        <h1 className='homePageSubH'>I need some help...</h1>\n                        <div className=\"homePageRequestButtons\">\n                            <div className=\"homePageButtons\" style={{ display: 'flex' }}>\n                                <Button className=\"bar-button\" type=\"primary\" style={{\n                                    fontSize: '3vmin',\n                                    marginTop: '1vmin',\n                                    paddingBottom: '6vmin',\n                                    paddingTop: '2vmin',\n                                    width: '110%',\n                                    textAlign: 'center',\n                                    borderRadius: '5px',\n                                    fontWeight: 'bolder'\n                                }} href=\"MyRequests\">My requests </Button>\n                                <Button className=\"bar-button\" type=\"primary\" style={{\n                                    fontSize: '3vmin',\n                                    marginTop: '1vmin',\n                                    paddingBottom: '6vmin',\n                                    paddingTop: '2vmin',\n                                    width: '110%',\n                                    textAlign: 'center',\n                                    borderRadius: '5px',\n                                    fontWeight: 'bolder'\n                                }}href=\"CreateRequest\">Create new request</Button>\n                            </div>\n                            <Button className=\"bar-button\" type=\"primary\" style={{\n                                marginLeft: '3vmin',\n                                fontSize: '3vmin',\n                                borderColor: 'gray',\n                                backgroundColor: 'gray',\n                                marginTop: '1vmin',\n                                marginLeft: '4vmin',\n                                paddingBottom: '6vmin',\n                                paddingTop: '2vmin',\n                                paddingLeft: '2.5vmin',\n                                paddingRight: '2.5vmin',\n                                textAlign: 'center',\n                                borderRadius: '5px',\n                                fontWeight: 'bolder'\n                            }}href=\"AdditionalResources\">Additional Resources </Button>\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HomePageView;\n","import React, { Component } from 'react';\nimport './AdditionalResources.css';\nimport { Button } from 'antd';\n\nconst AdditionalResourcesView = (props) => {\n\n    return (\n        <div className=\"additionalResourcesBody\">\n            <div className=\"heading\">\n                <h1 className=\"additionalResourcesHeader\" style={{fontSize: 40, fontWeight: 700}}>Additional Resources</h1>\n                <div id=\"additionalResources-descrip\">\n                    <p>If you're seeking additional information about the crisis, please navigate to the external sources below.</p>\n                </div>\n            </div>\n        \n        <div className=\"options\">\n            <div style={{display:'flex', flexWrap:\"wrap\"}}>\n                <Button className=\"bar-button\" type=\"primary\" style={{\n                    fontSize: '3vmin',\n                    marginTop: '1vmin',\n                    marginRight: '60%',\n                    paddingBottom: '6vmin',\n                    paddingTop: '2vmin',\n                    width: '400px',\n                    textAlign: 'center',\n                    borderRadius: '5px',\n                    fontWeight: 'bolder',\n                }} a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\">WHO Resources \n                </Button>\n                <Button className=\"bar-button\" type=\"primary\" style={{\n                    fontSize: '3vmin',\n                    marginTop: '1vmin',\n                    marginRight: '60%',\n                    paddingBottom: '6vmin',\n                    paddingTop: '2vmin',\n                    width: '400px',\n                    textAlign: 'center',\n                    borderRadius: '5px',\n                    fontWeight: 'bolder'\n                }} a href=\"https://www.usda.gov/coronavirus\"> USDA Resources\n                </Button>\n                <Button className=\"bar-button\" type=\"primary\" style={{\n                    fontSize: '3vmin',\n                    marginTop: '1vmin',\n                    marginRight: '60%',\n                    paddingBottom: '6vmin',\n                    paddingTop: '2vmin',\n                    width: '400px',\n                    textAlign: 'center',\n                    borderRadius: '5px',\n                    fontWeight: 'bolder'\n                }} a href=\"https://www.cdc.gov/coronavirus/2019-ncov/index.html\"> CDC Resources\n                </Button>\n                <Button className=\"bar-button\" type=\"primary\" style={{\n                    fontSize: '3vmin',\n                    marginTop: '1vmin',\n                    marginRight: '60%',\n                    paddingBottom: '6vmin',\n                    paddingTop: '2vmin',\n                    width: '400px',\n                    textAlign: 'center',\n                    borderRadius: '5px',\n                    fontWeight: 'bolder'\n                }} a href=\"https://kingcounty.gov/depts/health/communicable-diseases/disease-control/novel-coronavirus.aspx\"> King County Resources\n                </Button>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default AdditionalResourcesView;","import React, { useEffect, useState } from \"react\";\nimport app from \"./FirebaseUtil/index\"\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user)\n      setPending(false)\n    });\n  }, []);\n\n  if(pending){\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser} = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/login\"} />\n        )\n      }\n    />\n  );\n};\n\n\nexport default PrivateRoute","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Layout, Menu, Dropdown, Button } from 'antd';\nimport styles from './App.css';\nimport './test.css';\n///import Dashboard from './containers/Dashboard/Dashboard';\nimport SuggestedTasks from './components/SuggestedTasks/SuggestedTasks';\nimport ClaimedTasks from './components/ClaimedTasks/ClaimedTasksView';\nimport CreateNewRequestView from './components/CreateNewRequest/CreateNewRequestView';\nimport UserLoginView from './components/UserLogin/UserLoginView';\nimport MyRequests from './components/MyRequests/MyRequestsView';\nimport Test from './components/SuggestedTasks/test';\nimport logo from './logo.png';\nimport DashboardLayout from './components/DashboardLayout/DashboardLayout';\nimport HomeView from './components/HomeView';\nimport SignUpView from './components/UserSignUp/UserSignUpView'\nimport { DownOutlined } from '@ant-design/icons';\nimport HomePageView from './components/HomePageView';\nimport AdditionalResourcesView from './components/AdditionalResources/AdditionalResourcesView'\nimport firebase from 'firebase/app';\nimport 'firebase/database'; \nimport { AuthProvider } from \"./Auth\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport 'firebase/database'; \nconst { Header, Content, Footer, Sider } = Layout;\nconst SubMenu = Menu.SubMenu;\nconst handleSignOut = () => {\n  /* TODO: sign out user here */\n  firebase.auth().signOut();\n  console.log('logged out!')\n  console.log(firebase.auth().currentUser)\n}\nconst menuTasks = (\n  <Menu>\n    <Menu.Item>\n    <a rel=\"noopener noreferrer\" href=\"/ClaimedTasks\"> My claimed tasks </a>\n    </Menu.Item>\n    <Menu.Item> <a rel=\"noopener noreferrer\" href=\"/SuggestedTasks\"> Find new tasks </a>\n    </Menu.Item>\n  </Menu>\n);\nconst menuRequests = (\n  <Menu>\n    <Menu.Item>\n    <a rel=\"noopener noreferrer\" href=\"/MyRequests\"> My requests </a>\n    </Menu.Item>\n    <Menu.Item>\n    <a rel=\"noopener noreferrer\" href=\"/CreateRequest\"> Create a request </a>\n    </Menu.Item>\n  </Menu>\n);\nconst menuWelcome = (\n  <Menu>\n    <Menu.Item>\n    <Button onClick={handleSignOut}> Logout </Button>\n    </Menu.Item>\n  </Menu>\n)\nconst App = () => {\n  // sets user variable given from firebase to the state \n  const [user, setUser] = React.useState(null)\n  React.useEffect(() => {\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        setUser(user)\n        console.log(\"user is signed in\")\n        // User is signed in.\n      } else {\n        setUser(null)\n        console.log(\"user is logged out\")\n        // No user is signed in.\n      }\n    });\n  }\n  )\n  const isAuthenticated = () => {\n    // Perform authentication logic once user handling on backend is set up\n    return true\n  }\n  //A callback function for logging out the current user\n  const handleSignOut = () => {\n    // this.setState({errorMessage:null}); //clear any old errors\n    /* TODO: sign out user here */\n    firebase.auth().signOut();\n  }\n  const logoutMenuItem = React.useMemo(() => {\n    return(\n      user && \n      <Menu.Item key=\"5\" style={{ float: \"right\" }}>\n        <Dropdown overlay={ menuWelcome }>\n          <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n            Welcome back!     <DownOutlined />\n          </a>\n        </Dropdown>\n    </Menu.Item>\n    )\n  }, [user, menuWelcome]);\n  return (\n    <Router>\n      <Layout style={{ minHeight: '100vh' }}>\n        <Layout>\n          <Menu theme=\"light\" mode=\"horizontal\" style={{ boxShadow: \"0px 0px 9px 3px rgba(41,41,41,.25)\", height: \"10vh\", paddingTop: \"1.6vh\", alignItems: \"center\" }} defaultSelectedKeys={['2']}>\n            <Menu.Item key=\"1\" style={{ alignItems: \"center\" }}><span> <Menu.Item key=\"1\"><span><img src={logo} alt=\"Smiley face\" height=\"50\" /></span><Link to=\"/HomePageView\" />\n            </Menu.Item></span>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Dropdown overlay={menuTasks}>\n              <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                Tasks <DownOutlined />\n              </a>\n              </Dropdown>\n            </Menu.Item>\n            <Menu.Item key=\"3\"><Dropdown overlay={menuRequests}>\n              <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                Requests <DownOutlined />\n              </a>\n            </Dropdown>\n            </Menu.Item>\n            <Menu.Item key=\"4\">Additional Resources\n                <Link to=\"/AdditionalResources\" /></Menu.Item>\n            { logoutMenuItem }\n          </Menu>\n          <Content style={{ margin: '24px 16px', padding: 24, background: '#F1F4F6', minHeight: 280 }}>\n            <AuthProvider>\n            <PrivateRoute exact path=\"/\" component={HomePageView} />\n            <PrivateRoute path=\"/ClaimedTasks\" component={ClaimedTasks} />\n            <PrivateRoute path=\"/AdditionalResources\" component={AdditionalResourcesView} />\n            <PrivateRoute path=\"/MyRequests\" component={MyRequests} />\n            <PrivateRoute path=\"/HomePageView\" component={HomePageView} />\n            <PrivateRoute path=\"/CreateRequest\" component={CreateNewRequestView} />\n            <PrivateRoute exact path=\"/SuggestedTasks\" component={SuggestedTasks} />\n            <Route path=\"/login\" component={UserLoginView} />\n            <Route path=\"/signup\" component={SignUpView} />\n            </AuthProvider>\n          </Content>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { render } from 'react-dom';\nimport { DatePicker, message } from 'antd';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n// import firebase from './firebase/app';\n// import 'firebase/auth';\n// import 'firebase/database';\n\n\n// const App = () => {\n//   const [date, setDate] = useState(null);\n//   const handleChange = value => {\n//     message.info(`Selected Date: ${value ? value.format('YYYY-MM-DD') : 'None'}`);\n//     setDate(value);\n//   };\n//   return (\n//     <div style={{ width: 400, margin: '100px auto' }}>\n//       <DatePicker onChange={handleChange} />\n//       <div style={{ marginTop: 16 }}>\n//         Selected Date: {date ? date.format('YYYY-MM-DD') : 'None'}\n//       </div>\n//     </div>\n//   );\n// };\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}