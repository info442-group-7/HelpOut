{"version":3,"sources":["logo.png","components/SuggestedTasks/SuggestedTasksCardView.jsx","components/SuggestedTasks/SuggestedTasks.jsx","components/ClaimedTasks/ClaimedTasksCardView.jsx","components/ClaimedTasks/ClaimedTasksView.jsx","components/CreateNewRequest/CreateNewRequestView.jsx","FirebaseUtil/index.jsx","components/UserLogin/UserLoginView.jsx","components/MyRequests/MyRequestsCardView.jsx","components/MyRequests/MyOldRequests.jsx","components/MyRequests/MyRequestsView.jsx","components/SuggestedTasks/test.jsx","components/HomeView.jsx","components/DashboardLayout/DashboardLayout.jsx","components/UserSignUp/UserSignUpView.jsx","components/HomePageView.jsx","components/AdditionalResources/AdditionalResourcesView.jsx","Auth.jsx","PrivateRoute.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","accept","styled","Button","background","color","padding","marginTop","size","fontSize","SuggestedTasksCardView","props","state","clicked","requests","requester","currentUserID","userZip","onClick","bind","handleClick","firebase","auth","onAuthStateChanged","user","id","console","log","uid","setState","this","requestsRef","database","ref","on","snapshot","value","val","requesterRef","off","previousState","succeed","mappedKeys","Object","keys","map","key","requestObj","requestItems","requesterObj","REQUEST_ZIP_CODE","TASK_ID","userFullName","userId","REQUESTER_ID","child","once","USER_FNAME","USER_LNAME","className","userID","name","task","Component","SuggestedTask","tasksRef","taskPushRef","push","set","CLAIMED_TIME","Date","toLocaleString","REQUEST_ID","TASK_STATUS","USER_ID","update","REQUEST_STATUS","notsucceed","placement","title","PlusCircleTwoTone","style","marginRight","width","height","margin","boxShadow","lineHeight","display","flexDirection","REQUEST_TITLE","REQUEST_DESCRIPTION","REQUEST_DATE","Search","Input","SuggestedTasksView","scrollToBottom","messagesEnd","scrollIntoView","behavior","dog","counter","total","currentUser","handleChange","handleSubmit","updateZip","givenUserID","usersRef","USER_ZIP_CODE","concat","Array","event","target","alert","preventDefault","float","placeholder","enterButton","onSearch","clear","el","React","abandon","complete","more","ClaimedTasksCardView","tasks","taskObj","mappedRequestKeys","mappedRequesterKeys","taskItems","requestValue","requesterValue","request","ClaimedTaskView","taskid","abandonClick","remove","Results","CloseCircleTwoTone","twoToneColor","REQUESTER_PHONE_NUMBER","REQUESTER_STREET_ADDRESS","InfoCircleTwoTone","CheckCircleTwoTone","REQUESTER_FNAME","REQUESTER_LNAME","justifyContent","ClaimedTasksView","cards","type","marginLeft","paddingBottom","paddingTop","paddingLeft","paddingRight","textAlign","borderRadius","fontWeight","a","rel","href","layout","Modal","confirm","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","CreateNewRequestView","useEffect","currentUserId","setID","setFName","setLName","setPhoneNumber","USER_PHONE_NUMBER","useState","firstName","lastName","phoneNumber","history","useHistory","onFinish","values","zip","REQUESTER_ZIP_CODE","address","pushRef","details","success","okText","onOk","onFinishFailed","errorInfo","Item","label","rules","message","TextArea","maxLength","offset","htmlType","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","UserLoginView","app","signInWithEmailAndPassword","password","authUserResponse","onFinishFaild","prefix","UserOutlined","LockOutlined","class","deletetask","MyRequestsCardView","count","userRequestItems","UserRequestCard","taskID","requestStatus","deleteRequest","isComplete","opacity","cclassName","MyRequestsView","old","doneRedirect","MyOldRequests","to","marginBottom","MyButton","MoreButton","HomeView","Layout","Header","Content","Footer","signOut","Option","Select","UserSignUpView","createUserWithEmailAndPassword","USER_EMAIL","USER_DOB","dob","firstname","lastname","phonenum","USER_CITY","city","USER_STATE","USER_STREET_ADDRESS","street","zipcode","tailFormItemLayout","xs","sm","noStyle","len","pattern","Group","selected","min","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","HomePageView","users","userRef","taskRef","userObj","mappedtaskKeys","uObj","tObj","utObj","usertask","HomePage","usertaskObj","length","borderColor","backgroundColor","AdditionalResourcesView","flexWrap","AuthContext","createContext","AuthProvider","children","setCurrentUser","pending","setPending","Provider","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","menuTasks","Sider","Menu","SubMenu","menuRequests","menuWelcome","App","minHeight","theme","mode","alignItems","defaultSelectedKeys","src","logo","alt","overlay","e","DownOutlined","exact","path","ClaimedTasks","MyRequests","SuggestedTasks","SignUpView","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8e4e9470.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e12e79f5.png\";","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { PlusCircleTwoTone, VerticalRightOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\nimport '../../App.css'\r\nimport { Card } from 'antd';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database'; \r\nimport Grid from '@material-ui/core/Grid';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst DoneButton = styled(Button)({\r\n    background: 'linear-gradient(45deg, #1760fb 30%, #45a5df 90%)',\r\n    color: 'white',\r\n    padding: '.5vmin 3vmin',\r\n    marginTop: '1vmin',\r\n    size: '5vmin',\r\n    fontSize: '1.4vmin'\r\n});\r\n\r\nconst accept = <span>Claim Task</span>;\r\n\r\nclass SuggestedTasksCardView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            clicked: true,\r\n            requests: [],\r\n            requester: [],\r\n            currentUserID: '',\r\n            userZip: ''\r\n\r\n        };\r\n        this.onClick = this.onClick.bind(this);\r\n        this.handleClick.bind(this);\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n\r\n        firebase.auth().onAuthStateChanged(user => {\r\n\r\n            var id;\r\n      \r\n            if (user) {\r\n                console.log('This is the user: ', user.uid)\r\n                id = user.uid;\r\n                this.setState({currentUserID: id}); //get user id\r\n      \r\n            } else {\r\n              // No user is signed in.\r\n              console.log(\"user is not logged in!\")\r\n              this.setState({currentUserID: ''});\r\n            }\r\n        });\r\n      \r\n\r\n        this.requestsRef = firebase.database().ref('REQUEST');\r\n        this.requestsRef.on('value', (snapshot) => {\r\n            let value = snapshot.val();\r\n            this.setState({requests: value});\r\n        });\r\n\r\n        this.requesterRef = firebase.database().ref('REQUESTER');\r\n        this.requesterRef.on('value', (snapshot) => {\r\n            let value = snapshot.val();\r\n            this.setState({ requester: value });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.requestsRef.off();\r\n    }\r\n\r\n\r\n    handleClick() {\r\n        this.setState(previousState => {\r\n            return {\r\n                succeed: !previousState.succeed\r\n            };\r\n        });\r\n    }\r\n\r\n    // on click, do something about REQUEST.REQUEST_STATUS \r\n    onClick() {\r\n        console.log('clikced done!!');\r\n        this.setState({\r\n            clicked: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.requests) return null; // or return whatever display u want. maybe a message that says no suggestions ??\r\n\r\n        let requestKeys = Object.keys(this.state.requests);\r\n        // recursively produce list of chirp objcts to render\r\n        let mappedKeys = requestKeys.map((key) => {\r\n            let requestObj = this.state.requests[key];\r\n            requestObj.id = key;\r\n            return requestObj;\r\n        });\r\n\r\n        let requesterKeys = Object.keys(this.state.requester);\r\n        let mappedRequesterKeys = requesterKeys.map((key) => {\r\n            let requesterObj = this.state.requester[key];\r\n            requesterObj.id = key;\r\n            return requesterObj;\r\n        });\r\n\r\n        let requestItems = mappedKeys.map((requestObj) => {\r\n            if(requestObj.REQUEST_ZIP_CODE == this.props.userZip && requestObj.TASK_ID == '') {\r\n                \r\n                let userId = requestObj.REQUESTER_ID;\r\n                var userFullName;\r\n\r\n                firebase.database().ref(\"USER\").child(userId).once('value', function(snapshot){\r\n                    let value = snapshot.val();\r\n                    userFullName = value.USER_FNAME + ' ' + value.USER_LNAME;\r\n                    \r\n                });\r\n                console.log(this.state.currentUserID);\r\n\r\n                return <div className=\"col\"><SuggestedTask userID= {this.state.currentUserID} name={userFullName} task={requestObj} /></div>\r\n            } else {\r\n                return; //show no requests if none are in?\r\n            }\r\n        });\r\n\r\n    \r\n\r\n        return (\r\n            <div className='flex-grid'>\r\n                {requestItems}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n// A single task\r\nclass SuggestedTask extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            clicked: true,\r\n            requests: [],\r\n\r\n        };\r\n        this.onClick = this.onClick.bind(this);\r\n        this.handleClick.bind(this);\r\n    }\r\n\r\n    //claim task \r\n    handleClick() {\r\n        console.log('clicky in handleclick')\r\n        this.setState(previousState => {\r\n           return {\r\n                succeed: !previousState.succeed\r\n            };\r\n        });\r\n    }\r\n\r\n    // on click, do something about REQUEST.REQUEST_STATUS \r\n    onClick() {\r\n        console.log('clicked claim: claiming user id is: ' + this.props.userID);\r\n        this.setState({\r\n            clicked: false\r\n        });\r\n\r\n        //make new task\r\n        this.tasksRef = firebase.database().ref('CLAIMED_TASK');\r\n\r\n        let taskPushRef = this.tasksRef.push()\r\n        let key = taskPushRef.key;\r\n\r\n        \r\n        taskPushRef.set({\r\n            CLAIMED_TIME: new Date().toLocaleString(),\r\n            REQUESTER_ID: this.props.task.REQUESTER_ID,\r\n            REQUEST_ID: this.props.task.REQUEST_ID,\r\n            TASK_ID: key,\r\n            TASK_STATUS: \"incomplete\",\r\n            USER_ID: this.props.userID\r\n        })\r\n\r\n        firebase.database().ref('CLAIMED_TASK').child(key)\r\n        .update({TASK_STATUS: 'incomplete', TASK_ID: key });\r\n\r\n        //mark request as claimed, set task id\r\n        this.requestsRef = firebase.database().ref('REQUEST');\r\n        firebase.database().ref('REQUEST').child('/' + this.props.task.REQUEST_ID + '/')\r\n        .update({REQUEST_STATUS: 'claimed', TASK_ID: key, USER_ID: this.props.userID }); \r\n    \r\n     }\r\n\r\n\r\n    render () {\r\n\r\n        //connect these to db values, like status\r\n        const Results = () => (\r\n            <Grid container justify=\"center\">\r\n                <DoneButton size=\"small\" onClick={this.onClick} >Done!</DoneButton>\r\n            </Grid>\r\n        )\r\n\r\n        const succeed = (\r\n            <div className='claimedText'>Claimed!</div>\r\n        )\r\n\r\n        const notsucceed = (\r\n            <div>\r\n                <Tooltip placement=\"bottom\" title={accept}>\r\n                    <Button onClick={this.onClick}>\r\n                        <PlusCircleTwoTone style={{ fontSize: '40px' }} />\r\n                    </Button>\r\n                </Tooltip>\r\n            </div>\r\n        )\r\n\r\n        let task = this.props.task;\r\n\r\n\r\n\r\n        // need to do something about user id / requester id. get it and cross reference their info from REQUESTER and USER\r\n        return (\r\n            <div style={{ marginRight: '50%' }}>\r\n            <Card className=\"cardStyle\" style={{ width: '350px', height: 'auto', margin: '30px', boxShadow: \"0 8px 6px -6px #aaaaaa\", lineHeight: \"24px\", display: 'flex', flexDirection: 'column'}}>\r\n                <h5 className=\"cardTitle\">{task.REQUEST_TITLE}</h5>\r\n                <hr className=\"cardLineBreak\"></hr>\r\n                <div className=\"cardDesDiv\">\r\n                    <p className=\"cardDescription\">{task.REQUEST_DESCRIPTION} </p>\r\n                </div>\r\n                <p className=\"cardRequester\">{this.props.name} </p>\r\n                <p className=\"cardRequested\">Created on {task.REQUEST_DATE}</p>\r\n                <div className=\"suggestedTaskButton\">\r\n                    <div onClick={this.handleClick.bind(this)}> {this.state.succeed ? succeed : notsucceed} </div>\r\n                </div>\r\n            </Card>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default SuggestedTasksCardView;\r\n\r\n\r\n\r\n\r\n//<Container maxWidth=\"xs\">\r\n//    <Cards className={useStyles.root} variant=\"outlined\">\r\n//        <CardContent>\r\n//\r\n//        </CardContent>\r\n//        <CardActions>\r\n//            <Grid\r\n//                container\r\n//                direction=\"row\"\r\n//                justify=\"space-between\"\r\n//                alignItems=\"center\"\r\n//            >\r\n//                <div onClick={this.handleClick.bind(this)}>\r\n//                    {this.state.succeed ? succeed : notsucceed}\r\n //               </div>\r\n//\r\n\r\n  //          </Grid>\r\n\r\n    //    </CardActions>\r\n\r\n      //  {this.state.succeed ? null : <Results />}\r\n  //  </Cards>\r\n//</Container>\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component, useState } from 'react';\r\nimport SuggestedTasksCardView from \"./SuggestedTasksCardView\";\r\nimport '../../App.css'\r\nimport { Button, Form, Input, Radio } from 'antd';\r\nimport { InfoCircleTwoTone, CheckCircleTwoTone, CloseCircleTwoTone } from '@ant-design/icons';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database'; \r\nimport './SuggestedTasks.css'\r\n\r\n\r\nconst { Search } = Input;\r\n\r\nclass SuggestedTasksView extends React.Component {\r\n  \r\n\r\n  constructor() {\r\n    super()\r\n    this.state = { dog: \"fido\", counter: 5, total: [0, 1, 2, 3], value: '', userZip: '', currentUser: '' };\r\n    this.onClick = this.onClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.updateZip = this.updateZip.bind(this);\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n  componentDidMount() {\r\n    this.scrollToBottom();\r\n\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      var givenUserID;\r\n      if (user) {\r\n          givenUserID = user.uid;\r\n          this.setState({currentUser: givenUserID})\r\n          console.log(this.state.currentUser)\r\n\r\n          // if not set by search function\r\n          if (this.state.userZip == '') {\r\n            this.usersRef = firebase.database().ref('USER').child(this.state.currentUser);\r\n            this.usersRef.on('value', (snapshot) => {\r\n                let value = snapshot.val();\r\n                this.setState({userZip: value.USER_ZIP_CODE})\r\n                console.log('userZip in componentdidmount is ' + this.state.userZip)\r\n            })\r\n          }\r\n      } else{\r\n          console.log('not logged in')\r\n          this.setState({currentUser:null})\r\n      }\r\n  });\r\n  }\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({\r\n      counter: this.state.counter + 1,\r\n      total: this.state.total.concat([...new Array(4)]),\r\n\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert('A name was submitted: ' + this.state.value);\r\n    event.preventDefault();\r\n  }\r\n\r\n  updateZip(value) {\r\n    console.log('new zipcode entered is ' + value)\r\n    this.setState({userZip: value})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ }} >\r\n        <div className=\"headerDiv\"><h1 className=\"cardHeader\">Tasks in My Area ({this.state.userZip})</h1>\r\n        <p className=\"disclaimer\">Below are requests in your zipcode! If there are no cards shown, all requests in your area have been fulfilled. Try a different zip code to find new requests.</p>\r\n          <div \r\n            id=\"zipcode-search\">\r\n            <Search\r\n              style={{float:'center'}}\r\n              placeholder={this.state.userZip}\r\n              enterButton=\"Search\"\r\n              size=\"large\"\r\n              onSearch={value => this.updateZip(value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n          {/* {this.state.total.map((value) => */}\r\n                <SuggestedTasksCardView  userZip={this.state.userZip} currentUser={this.state.currentUser} />\r\n          {/* )} */}\r\n\r\n        {/* <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n        My zip code is: \r\n          <input className=\"zipCodeInput\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n        </label>\r\n        \r\n      </form> */}\r\n        <div style={{ float: \"left\", clear: \"both\" }}\r\n          ref={(el) => { this.messagesEnd = el; }}>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\nconst Greeting = props => <h1>{props.greeting}</h1>;\r\n\r\n\r\n\r\nexport default SuggestedTasksView;\r\n\r\n//     <MoreButton variant=\"outlined\" size=\"large\" onClick={this.onClick}>More</MoreButton>\r\n\r\n// onClick() {\r\n//  this.setState({\r\n//    counter: this.state.counter + 1,\r\n\r\n//  });\r\n//  let first = this.state.total[this.state.total.length - 1] + 1\r\n//  this.setState(prevState => ({\r\n//    total: [...prevState.total, first],\r\n//  }))\r\n//  this.setState(prevState => ({\r\n//   total: [...prevState.total, first + 1],\r\n//  }))\r\n//  this.setState(prevState => ({\r\n//    total: [...prevState.total, first + 2],\r\n//  }))\r\n//  this.setState(prevState => ({\r\n//    total: [...prevState.total, first + 3],\r\n//  }))\r\n//}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n<Grid container className={useStyles.root} spacing={2}>\r\n<Grid item xs={12}>\r\n  <Grid container justify=\"center\" spacing={2}>\r\n    {this.state.total.map((value) => (\r\n      <Grid key={value} item>\r\n        <YourRequestsCardView />\r\n      </Grid>\r\n    ))}\r\n  </Grid>\r\n</Grid>\r\n\r\n</Grid>\r\n*/","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Card } from 'antd';\r\nimport '../../App.css'\r\nimport { InfoCircleTwoTone, EditTwoTone, CheckCircleTwoTone, CloseCircleTwoTone } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst abandon = <span>Give up...</span>;\r\nconst complete = <span>Done!</span>;\r\nconst more = <span>More...</span>;\r\n\r\nclass ClaimedTasksCardView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicked: true,\r\n            currentUser: '', tasks: [], requests: [], requester: []\r\n        };\r\n        this.onClick = this.onClick.bind(this);\r\n        this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                // User is signed in.\r\n                console.log('signed in')\r\n                this.setState({ currentUser: user.uid })\r\n\r\n            } else {\r\n                // No user is signed in.\r\n                console.log('not signed in')\r\n            }\r\n\r\n        }.bind(this))\r\n\r\n        this.tasksRef = firebase.database().ref('CLAIMED_TASK');\r\n        this.tasksRef.on('value', (snapshot) => {\r\n            let value = snapshot.val();\r\n            this.setState({ tasks: value });\r\n        });\r\n\r\n        this.requestsRef = firebase.database().ref('REQUEST');\r\n        this.requestsRef.on('value', (snapshot) => {\r\n            let value = snapshot.val();\r\n            this.setState({ requests: value });\r\n        });\r\n\r\n        this.requesterRef = firebase.database().ref('REQUESTER');\r\n        this.requesterRef.on('value', (snapshot) => {\r\n            let value = snapshot.val();\r\n            this.setState({ requester: value });\r\n        });\r\n    }\r\n\r\n    testUser() {\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.tasksRef.off();\r\n        };\r\n\r\n\r\n        handleClick() {\r\n            this.setState(previousState => {\r\n                return {\r\n                    succeed: !previousState.succeed\r\n                };\r\n            });\r\n        }\r\n\r\n        // on click, do something about REQUEST.REQUEST_STATUS \r\n        onClick() {\r\n            console.log('clikced done!!');\r\n            this.setState({\r\n                clicked: false\r\n            });\r\n        }\r\n\r\n        render() {\r\n            if (!this.state.tasks) return null;\r\n\r\n            let taskKeys = Object.keys(this.state.tasks);\r\n            let mappedKeys = taskKeys.map((key) => {\r\n                let taskObj = this.state.tasks[key];\r\n                taskObj.id = key;\r\n                return taskObj;\r\n            });\r\n\r\n            let requestKeys = Object.keys(this.state.requests);\r\n            let mappedRequestKeys = requestKeys.map((key) => {\r\n                let requestObj = this.state.requests[key];\r\n                requestObj.id = key;\r\n                return requestObj;\r\n            });\r\n\r\n            let requesterKeys = Object.keys(this.state.requester);\r\n            let mappedRequesterKeys = requesterKeys.map((key) => {\r\n                let requesterObj = this.state.requester[key];\r\n                requesterObj.id = key;\r\n                return requesterObj;\r\n            });\r\n\r\n            let taskItems = mappedKeys.map((taskObj) => {\r\n                let requestValue = ''\r\n                let requesterValue = ''\r\n                if (this.state.currentUser == taskObj.USER_ID && taskObj.TASK_STATUS == 'incomplete') {\r\n                    console.log(taskObj.TASK_STATUS)\r\n\r\n                    mappedRequestKeys.map((requestObj) => {\r\n                        if (requestObj.TASK_ID == taskObj.TASK_ID) {\r\n                            requestValue = requestObj\r\n                        }\r\n                    })\r\n\r\n                    mappedRequesterKeys.map((requesterObj) => {\r\n                        if (requesterObj.REQUESTER_ID == taskObj.REQUESTER_ID) {\r\n                            requesterValue = requesterObj\r\n                        }\r\n                    })\r\n\r\n                    return <div className='col'> <ClaimedTaskView request={requestValue} task={taskObj} requester={requesterValue} /></div>\r\n                }\r\n            });\r\n\r\n\r\n            return (\r\n                <div className=\"flex-grid\">\r\n                    {taskItems}\r\n                </div>\r\n            );\r\n\r\n        }\r\n    }\r\n\r\nclass ClaimedTaskView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { clicked: true, taskid: '', task: this.props.task };\r\n        this.onClick = this.onClick.bind(this);\r\n        this.handleClick.bind(this);\r\n        this.abandonClick = this.abandonClick.bind(this)\r\n    }\r\n    handleClick() {\r\n        this.setState(previousState => {\r\n            return {\r\n                succeed: !previousState.succeed\r\n            };\r\n        });\r\n    }\r\n    onClick() {\r\n        this.setState({\r\n            clicked: false,\r\n        });\r\n\r\n        this.tasksRef = firebase.database().ref('CLAIMED_TASK');\r\n        firebase.database().ref('CLAIMED_TASK').child('/' + this.props.request.TASK_ID + '/')\r\n        .update({TASK_STATUS: 'complete' });\r\n\r\n        //mark as claimed\r\n        this.requestsRef = firebase.database().ref('REQUEST');\r\n        firebase.database().ref('REQUEST').child('/' + this.props.request.REQUEST_ID + '/')\r\n        .update({REQUEST_STATUS: 'claimed' });        \r\n    }\r\n\r\n    abandonClick() {\r\n\r\n        this.requestsRef = firebase.database().ref('REQUEST');\r\n        firebase.database().ref('REQUEST').child('/' + this.props.task.REQUEST_ID + '/')\r\n        .update({TASK_ID: '', REQUEST_STATUS:'open' });\r\n        \r\n        this.tasksRef = firebase.database().ref('CLAIMED_TASK');\r\n        firebase.database().ref('CLAIMED_TASK').child('/' + this.props.task.TASK_ID + '/')\r\n            .remove()\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        let request = this.props.request;\r\n        let task = this.props.task;\r\n        let requester = this.props.requester;\r\n\r\n\r\n    \r\n\r\n    const Results = () => (\r\n        <Tooltip placement=\"bottom\" title={abandon}>\r\n            <Button onClick={this.abandonClick} ><CloseCircleTwoTone twoToneColor=\"#eb2f96\" style={{ fontSize: '40px' }} /></Button>\r\n        </Tooltip>\r\n    )\r\n    const succeed = (\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>Phone Number: { requester.REQUESTER_PHONE_NUMBER} <br /> Address:  { requester.REQUESTER_STREET_ADDRESS}<br></br></div>\r\n    )\r\n    const notsucceed = (\r\n        <div>\r\n            <Tooltip placement=\"bottom\" title={more}>\r\n                <Button>\r\n                    <InfoCircleTwoTone style={{ fontSize: '40px' }} />\r\n                </Button>\r\n            </Tooltip>\r\n            <Tooltip placement=\"bottom\" title={complete}>\r\n                <Button onClick={this.onClick}>\r\n                    <CheckCircleTwoTone twoToneColor=\"#52c41a\" style={{ fontSize: '40px' }} />\r\n                </Button>\r\n            </Tooltip>\r\n        </div>\r\n    )\r\n\r\n\r\n    if(this.state.clicked) {\r\n        return (\r\n            <div style={{ marginRight: '50%' }}>\r\n\r\n                <Card className=\"cardStyle\" style={{ width: '350px', boxShadow: \"0 8px 6px -6px #aaaaaa\", lineHeight: \"24px\", display: 'flex', flexDirection: 'column' }}>\r\n                    <h5 className=\"cardTitle\"> {request.REQUEST_TITLE}</h5>\r\n                    <hr className=\"cardLineBreak\"></hr>\r\n                    <div className=\"cardDesDiv\">\r\n                        <p className=\"cardDescription\">{request.REQUEST_DESCRIPTION} </p>\r\n                    </div>\r\n                    <p className=\"cardRequester\">{requester.REQUESTER_FNAME}  {requester.REQUESTER_LNAME}</p>\r\n                    <p className=\"cardRequested\">Accepted on {task.CLAIMED_TIME}</p>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', marginTop: 'auto' }}>\r\n                        <div> {this.state.succeed ? null : <Results />}</div>\r\n                        <div onClick={this.handleClick.bind(this)}> {this.state.succeed ? succeed : notsucceed} </div>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n        else {\r\n    return null;\r\n}\r\n    }\r\n}\r\n\r\nexport default ClaimedTasksCardView;\r\n\r\n//  <Grid container justify=\"center\">\r\n//<DoneButton size=\"small\" onClick={this.onClick} >Done!</DoneButton>\r\n\r\n//</Grid>\r\n\r\n ///   <MoreButton size=\"small\"> More... </MoreButton>\r\n ///                <MyButton size=\"small\" onClick={this.onClick} >Give up...</MyButton>\r\n\r\n\r\n\r\n//<Container maxWidth=\"xs\">\r\n//    <Cards className={useStyles.root} variant=\"outlined\">\r\n//        <CardContent>\r\n//\r\n//\r\n//        </CardContent>\r\n//        <CardActions>\r\n//            <Grid\r\n//                container\r\n//                direction=\"row\"\r\n//                justify=\"space-between\"\r\n//                alignItems=\"center\"\r\n//            >\r\n//                <div onClick={this.handleClick.bind(this)}>\r\n//                    {this.state.succeed ? succeed : notsucceed}\r\n //               </div>\r\n//\r\n\r\n  //          </Grid>\r\n\r\n    //    </CardActions>\r\n\r\n      //  {this.state.succeed ? null : <Results />}\r\n  //  </Cards>\r\n//</Container>\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ClaimedTasksCardView from \"./ClaimedTasksCardView\";\r\nimport { Button } from 'antd';\r\n\r\nimport '../../App.css'\r\n\r\nclass ClaimedTasksView extends React.Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = { cards: 1, dog: \"fido\", counter: 5, total: [0, 1, 2, 3, 4, 5] };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n  \r\n\r\n  /*  scrollToBottom = () => {\r\n      this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.scrollToBottom();\r\n    }\r\n  \r\n    componentDidUpdate() {\r\n      this.scrollToBottom();\r\n    }\r\n  */\r\n\r\n  onClick() {\r\n    this.setState({\r\n      counter: this.state.counter + 1,\r\n      total: this.state.total.concat([...new Array(5)]),\r\n    });\r\n  }\r\n\r\n  updateCards() {\r\n    this.setState({\r\n      cards: this.state.cards + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{  }} >\r\n        <div className=\"headerDiv\"><h1 className=\"cardHeader\">Claimed Tasks</h1>\r\n        <p className=\"disclaimer\">Below are your claimed tasks. If there are no tasks below, it means you have not yet claimed a request. Click on the button below to find new tasks!</p>\r\n        \r\n        </div>\r\n                <ClaimedTasksCardView />\r\n        <div style={{ display: 'flex' }}>\r\n            <Button type=\"primary\" style={{\r\n              marginLeft: '12vw',\r\n              fontSize: '30px', marginTop: '50px', paddingBottom: '50px', paddingTop: '18px', size: 'large', paddingLeft: '30px', paddingRight: '30px', textAlign: 'center', borderRadius: '5px', fontWeight: 'bolder'\r\n            }}a rel=\"noopener noreferrer\" href=\"/SuggestedTasks\">Find new tasks </Button></div>\r\n        </div>\r\n     \r\n    );\r\n  }\r\n}\r\nexport default ClaimedTasksView;\r\n/*\r\n<div style={{ float: \"left\", clear: \"both\" }}\r\n          ref={(el) => { this.messagesEnd = el; }}>\r\n        </div>\r\n        */\r\n\r\n//     <MoreButton variant=\"outlined\" size=\"large\" onClick={this.onClick}>More</MoreButton>\r\n\r\n// onClick() {\r\n//  this.setState({\r\n//    counter: this.state.counter + 1,\r\n\r\n//  });\r\n//  let first = this.state.total[this.state.total.length - 1] + 1\r\n//  this.setState(prevState => ({\r\n//    total: [...prevState.total, first],\r\n//  }))\r\n//  this.setState(prevState => ({\r\n//   total: [...prevState.total, first + 1],\r\n//  }))\r\n//  this.setState(prevState => ({\r\n//    total: [...prevState.total, first + 2],\r\n//  }))\r\n//  this.setState(prevState => ({\r\n//    total: [...prevState.total, first + 3],\r\n//  }))\r\n//}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n<Grid container className={useStyles.root} spacing={2}>\r\n<Grid item xs={12}>\r\n  <Grid container justify=\"center\" spacing={2}>\r\n    {this.state.total.map((value) => (\r\n      <Grid key={value} item>\r\n        <YourRequestsCardView />\r\n      </Grid>\r\n    ))}\r\n  </Grid>\r\n</Grid>\r\n\r\n</Grid>\r\n*/","import { Form, Input, InputNumber, Modal, Button } from 'antd';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\nimport { Redirect, Link, useHistory } from 'react-router-dom';\r\nimport firebase from 'firebase/app';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\n// validation messages for form\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\n// creates the request view\r\nconst CreateNewRequestView = () => {\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    firebase.auth().onAuthStateChanged(user => {\r\n\r\n      var currentUserId;\r\n\r\n      if (user) {\r\n          console.log('This is the user: ', user.uid)\r\n          currentUserId = user.uid;\r\n          setID(currentUserId);\r\n        // User is signed in.\r\n        firebase.database().ref(\"USER\").child(currentUserId).once('value', function(snapshot){\r\n          let user = snapshot.val();\r\n          setFName(user.USER_FNAME);\r\n          setLName(user.USER_LNAME);\r\n          setPhoneNumber(user.USER_PHONE_NUMBER);\r\n          // userTest = user;\r\n          // setRequester(user);\r\n          // console.log(user)\r\n          // console.log('user test is ' + userTest)\r\n          // console.log ('user is ' + requesterUser.USER_FNAME)\r\n          // console.log ('user is ' + user.USER_FNAME)\r\n          // console.log('user type is + ' + user.type)\r\n          // console.log()\r\n    \r\n        });\r\n\r\n      } else {\r\n        // No user is signed in.\r\n        console.log(\"user is not logged in!\")\r\n        currentUserId = '';\r\n      }\r\n  });\r\n\r\n\r\n  })\r\n\r\n  const [firstName, setFName] = useState('');\r\n  const [lastName, setLName] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  // redirects/reroutes to request page\r\n  const doneRedirect = function() {\r\n    history.push(\"/MyRequests\");\r\n  };\r\n\r\n  const [userID, setID] = useState('');\r\n\r\n\r\n  // on successful submission, creates modal \r\n  const onFinish = values => {\r\n    console.log('Success:', values);\r\n    console.log(values.zip)\r\n    // let userTest = firebase.database().ref(\"USER\");\r\n    // userTest.push({user_city: \"TESTING\"})  \r\n\r\n// src: https://stackoverflow.com/questions/38768576/in-firebase-when-using-push-how-do-i-get-the-unique-id-and-store-in-my-databas\r\n\r\n\r\n\r\n\r\n\r\n    let requesterRef = firebase.database().ref(\"REQUESTER\");\r\n      requesterRef.push({\r\n        REQUESTER_ZIP_CODE: values.zip,\r\n        REQUESTER_FNAME: firstName,\r\n        REQUESTER_LNAME: lastName,\r\n        REQUESTER_PHONE_NUMBER: phoneNumber,\r\n        REQUESTER_STREET_ADDRESS: values.address,\r\n        REQUESTER_ID: userID\r\n\r\n      })\r\n\r\n    \r\n    \r\n\r\n    let requestRef = firebase.database().ref(\"REQUEST\");\r\n\r\n\r\n    var pushRef = requestRef.push();\r\n    var key = pushRef.key;\r\n    pushRef.set({\r\n      REQUESTER_ID: userID, \r\n      REQUEST_DATE: new Date().toLocaleString(),\r\n      REQUEST_DESCRIPTION: values.details,\r\n      REQUEST_STATUS: \"open\", // to start\r\n      // REQUEST_TIME: 'mock - add date function here',\r\n      REQUEST_TITLE: values.title,\r\n      REQUEST_ZIP_CODE: values.zip,\r\n      USER_ID: '', //ONCE SOMEONe accepts, this is updated\r\n      TASK_ID: '',\r\n      REQUEST_ID: key \r\n    })\r\n\r\n    success();\r\n  };\r\n\r\n  // if error connecting to DB\r\n  const onFinishFailed = errorInfo => {\r\n    // add in error message\r\n    // connect this state to db (promise, return)\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  // modal informing user that their submission was successful, onclick will redirect them\r\n  function success() {\r\n\r\n    Modal.success({\r\n      okText:\"Done\",\r\n      title: 'Submit successful!',\r\n      // content: 'View your requests to see your new entry.',\r\n      onOk() {\r\n        doneRedirect();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // renders actual page & form\r\n  return (\r\n    <div>\r\n      <h2 style={{fontSize: 40, fontWeight: 700}}>Create a new request</h2>\r\n      <Form id=\"create-request\" {...layout} style={{width:800}} name=\"nest-messages\" onFinish={onFinish} onFinishFailed={onFinishFailed} validateMessages={validateMessages}>\r\n        <Form.Item name={['title']} label=\"I need help with \" rules={[{ required: true, message:'Your request title is required!' }]}>\r\n          <Input style={{width: 500}}/>\r\n        </Form.Item>\r\n        <Form.Item name={['details']} label=\"Could you give additional details?\">\r\n          <Input.TextArea style={{width: 500}} />\r\n        </Form.Item>\r\n        {/* <Form.Item name={['user', 'age']} label=\"This task can be categorized as\" rules={[{ type: 'number', min: 0, max: 99 }]}>\r\n          <InputNumber />\r\n        </Form.Item> */}\r\n        <Form.Item name={['address']} label=\"My address is\" rules={[{ required: true, message:'Address is required!'}]}>\r\n          <Input style={{ width: 500 }} />\r\n        </Form.Item>\r\n        <Form.Item name={['zip']} label=\"Zipcode\" maxLength='5' rules={[{ required: true }]}>\r\n          <Input style={{ width: 100, textAlign: 'center' }} maxLength=\"5\" placeholder=\"12345\" />\r\n\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }} >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateNewRequestView;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCjJR5NV13iDYluMYu-EQQZMIlZ2DwhW9A\",\r\n    authDomain: \"help-out-info-442.firebaseapp.com\",\r\n    databaseURL: \"https://help-out-info-442.firebaseio.com\",\r\n    projectId: \"help-out-info-442\",\r\n    storageBucket: \"help-out-info-442.appspot.com\",\r\n    messagingSenderId: \"487992417747\",\r\n    appId: \"1:487992417747:web:af6e6e755c8a62f3c4e326\",\r\n    measurementId: \"G-2YLQWRCY46\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;\r\n","import React, { Component } from 'react';\r\nimport firebase from \"../../FirebaseUtil\";\r\nimport { Form, Input, Button } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Redirect, Link, useHistory } from 'react-router-dom';\r\nimport './UserLoginView.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst UserLoginView = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const onFinish = async (values) => {\r\n    console.log('Success:', values);\r\n    const authUserResponse = await firebase.app().auth().signInWithEmailAndPassword(values.email, values.password)\r\n    console.log(authUserResponse);\r\n    history.push('/HomePageView')\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const redirectToSignUp = function() {\r\n    console.log('pushing to signup')\r\n    history.push(`/signup`);\r\n  }\r\n\r\n// put util file \r\n// on finish call firebase\r\n  return (\r\n    <div id=\"login-container\">\r\n      <h1>Welcome to Helpout!</h1>\r\n      <h2>Please log in or sign up to continue.</h2>\r\n\r\n      <Form\r\n      name=\"normal_login\"\r\n      className=\"login-form\"\r\n      onFinish={onFinish}\r\n      onFinishFaild={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        name=\"email\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            // message: 'Please input your email!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} type='email' placeholder=\"Email\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            // message: 'Please input your Password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n      </Form.Item>\r\n     <Form.Item>\r\n\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Log in\r\n        </Button>\r\n      </Form.Item>\r\n      </Form>\r\n      <hr class='form-divider'></hr>\r\n      <p>Don't have an account yet?</p>\r\n      <Button type=\"secondary\" onClick={redirectToSignUp}>Sign up</Button>\r\n    </div>\r\n  );\r\n};\r\n// const { Tab, UserName, Password, Mobile, Captcha, Submit } = Login;\r\n\r\n// class LoginDemo extends React.Component {\r\n//   state = {\r\n//     notice: '',\r\n//     type: 'tab2',\r\n//     autoLogin: true,\r\n//   };\r\n//   onSubmit = (err, values) => {\r\n//     console.log('value collected ->', {\r\n//       ...values,\r\n//       autoLogin: this.state.autoLogin,\r\n//     });\r\n//     if (this.state.type === 'tab1') {\r\n//       this.setState(\r\n//         {\r\n//           notice: '',\r\n//         },\r\n//         () => {\r\n//           if (!err && (values.username !== 'admin' || values.password !== '888888')) {\r\n//             setTimeout(() => {\r\n//               this.setState({\r\n//                 notice: 'The combination of username and password is incorrect!',\r\n//               });\r\n//             }, 500);\r\n//           }\r\n//         }\r\n//       );\r\n//     }\r\n//   };\r\n//   onTabChange = key => {\r\n//     this.setState({\r\n//       type: key,\r\n//     });\r\n//   };\r\n//   changeAutoLogin = e => {\r\n//     this.setState({\r\n//       autoLogin: e.target.checked,\r\n//     });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div className=\"login-warp\">\r\n//         <Login\r\n//           defaultActiveKey={this.state.type}\r\n//           onTabChange={this.onTabChange}\r\n//           onSubmit={this.onSubmit}\r\n//         >\r\n//           <Tab key=\"tab1\" tab=\"Account\">\r\n//             {this.state.notice && (\r\n//               <Alert\r\n//                 style={{ marginBottom: 24 }}\r\n//                 message={this.state.notice}\r\n//                 type=\"error\"\r\n//                 showIcon\r\n//                 closable\r\n//               />\r\n//             )}\r\n//             <UserName name=\"username\" />\r\n//             <Password name=\"password\" />\r\n//           </Tab>\r\n//           <Tab key=\"tab2\" tab=\"Mobile\">\r\n//             <Mobile name=\"mobile\" />\r\n//             <Captcha onGetCaptcha={() => console.log('Get captcha!')} name=\"captcha\" />\r\n//           </Tab>\r\n//           <div>\r\n//             <Checkbox checked={this.state.autoLogin} onChange={this.changeAutoLogin}>\r\n//               Keep me logged in\r\n//             </Checkbox>\r\n//             <a style={{ float: 'right' }} href=\"\">\r\n//               Forgot password\r\n//             </a>\r\n//           </div>\r\n//           <Submit>Login</Submit>\r\n//           <div>\r\n//             Other login methods\r\n//             <span className=\"icon icon-alipay\" />\r\n//             <span className=\"icon icon-taobao\" />\r\n//             <span className=\"icon icon-weibo\" />\r\n//             <a style={{ float: 'right' }} href=\"\">\r\n//               Register\r\n//             </a>\r\n//           </div>\r\n//         </Login>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n export default UserLoginView;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Card } from 'antd';\r\nimport '../../App.css'\r\nimport { EditTwoTone, CheckCircleTwoTone, CloseCircleTwoTone } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst deletetask = <span>Delete</span>;\r\nconst edit = <span>Edit</span>;\r\n\r\nclass MyRequestsCardView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { clicked: true, \r\n            currentUser: null,\r\n            requests: [],\r\n            count: 0\r\n        };\r\n        this.onClick = this.onClick.bind(this);\r\n        this.handleClick.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        firebase.auth().onAuthStateChanged(user => {\r\n\r\n            var currentUserId;\r\n      \r\n            if (user) {\r\n                console.log('This is the user: ', user.uid)\r\n                currentUserId = user.uid;\r\n                this.setState({currentUser : currentUserId})\r\n              // User is signed in.\r\n            } else {\r\n              // No user is signed in.\r\n              console.log(\"user is not logged in!\")\r\n              currentUserId = null;\r\n            }\r\n        });\r\n       \r\n        this.requestsRef = firebase.database().ref('REQUEST');\r\n        this.requestsRef.on('value', (snapshot) => {\r\n            let value = snapshot.val();\r\n            this.setState({requests: value});\r\n        });\r\n\r\n        this.requesterRef = firebase.database().ref('REQUESTER');\r\n        this.requesterRef.on('value', (snapshot) => {\r\n            let value = snapshot.val();\r\n            this.setState({ requester: value });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.requestsRef.off();\r\n    }\r\n\r\n\r\n    handleClick() {\r\n        this.setState(previousState => {\r\n            return {\r\n                succeed: !previousState.succeed\r\n            };\r\n        });\r\n    }\r\n\r\n    onClick() {\r\n        this.setState({\r\n            clicked: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.requests) return null; // or return whatever display u want. maybe a message that says no suggestions ??\r\n\r\n        let requestKeys = Object.keys(this.state.requests);\r\n\r\n        let mappedKeys = requestKeys.map((key) => {\r\n            let requestObj = this.state.requests[key];\r\n            requestObj.id = key;\r\n            return requestObj;\r\n        });\r\n        \r\n        let userRequestItems = mappedKeys.map((requestObj) => {\r\n            if(requestObj.REQUESTER_ID == this.state.currentUser) {\r\n                return <div className=\"col\"><UserRequestCard request={requestObj} /></div> \r\n            }\r\n        }); //else return null?\r\n\r\n\r\n        // let userRequestItems = mappedKeys.map((requestObj) => {\r\n        //     // if(requestObj = )\r\n        //     console.log(requestObj)\r\n        //     return <div className=\"col\"><UserRequestCard request={requestObj} /></div>\r\n        // });\r\n\r\n        return (\r\n            <div className='flex-grid'>\r\n                {userRequestItems}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// A single task\r\nclass UserRequestCard extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { clicked: true, taskID: null, requestStatus: ''  };\r\n        this.onClick = this.onClick.bind(this);\r\n        this.handleClick.bind(this);\r\n        this.deleteRequest.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState(previousState => {\r\n            return {\r\n                succeed: !previousState.succeed\r\n            };\r\n        });\r\n    }\r\n\r\n    onClick() {\r\n        this.deleteRequest();\r\n\r\n        this.setState({\r\n            clicked: false\r\n        });\r\n        console.log('request deleted!')\r\n    }\r\n\r\n\r\n    // will delete request from database\r\n     deleteRequest() {\r\n        let requestObj = this.props.request;\r\n\r\n        return firebase.database().ref('REQUEST').child(requestObj.id).remove();\r\n     }\r\n\r\n     componentDidMount() {\r\n        let requestObj = this.props.request;\r\n\r\n        this.requesterRef = firebase.database().ref('REQUEST').child(requestObj.id);\r\n        this.requesterRef.on('value', (snapshot) => {\r\n            let value = snapshot.val();\r\n            if (value) {\r\n                this.setState({\r\n                    taskID: value.TASK_ID,\r\n                    requestStatus: value.REQUEST_STATUS\r\n                })\r\n            }\r\n        });\r\n     }\r\n\r\n\r\n\r\n     isComplete () {\r\n        if (this.state.requestStatus == 'open') {\r\n            if (this.state.taskID == \"\" || this.state.taskID == null) {\r\n                return (<p>OPEN, UNCLAIMED</p>)\r\n            } else {\r\n                return (<p>CLAIMED, IN PROGRESS</p>)\r\n            }\r\n        } else {\r\n            return (<p>COMPLETED</p>)\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n        \r\n        const Results = () => (\r\n            <Tooltip placement=\"bottom\" title={deletetask}>\r\n                <Button onClick={this.onClick} ><CloseCircleTwoTone twoToneColor=\"#eb2f96\" style={{ fontSize: '40px' }} /></Button>\r\n            </Tooltip>\r\n        )\r\n     \r\n        let request = this.props.request;\r\n\r\n\r\n        if (this.state.clicked) {\r\n            return (\r\n             \r\n                <div style={{ marginRight: '50%' }}>\r\n                <Card className=\"cardStyle\" style={{ width: '350px', boxShadow: \"0 8px 6px -6px #aaaaaa\", lineHeight: \"24px\", display: 'flex', flexDirection: 'column' }}>\r\n                    <h5 className=\"cardTitle\">{request.REQUEST_TITLE}</h5>\r\n                    <hr className=\"cardLineBreak\"></hr>\r\n                    <div className=\"cardDesDiv\">\r\n                    <p className=\"cardDescription\">{request.REQUEST_DESCRIPTION} </p>\r\n                        </div>\r\n                    <div>\r\n                        {this.isComplete()}\r\n                    </div>\r\n                    {/* <p className=\"cardRequester\">Requester's name</p> */}\r\n                    <p className=\"cardRequested\">Requested on {request.REQUEST_DATE}</p>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', marginTop: 'auto' }}>\r\n                        <div> {this.state.succeed ? null : <Results />}</div>\r\n\r\n\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default MyRequestsCardView;\r\n\r\n\r\n//<Container maxWidth=\"xs\">\r\n//    <Cards className={useStyles.root} variant=\"outlined\">\r\n//        <CardContent>\r\n//\r\n//\r\n//        </CardContent>\r\n//        <CardActions>\r\n//            <Grid\r\n//                container\r\n//                direction=\"row\"\r\n//                justify=\"space-between\"\r\n//                alignItems=\"center\"\r\n//            >\r\n//                <div onClick={this.handleClick.bind(this)}>\r\n//                    {this.state.succeed ? succeed : notsucceed}\r\n //               </div>\r\n//\r\n\r\n  //          </Grid>\r\n\r\n    //    </CardActions>\r\n\r\n      //  {this.state.succeed ? null : <Results />}\r\n  //  </Cards>\r\n//</Container>\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Card } from 'antd';\r\nimport s from '../../App.css'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nconst MyButton = styled(Button)({\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    color: 'white',\r\n    padding: '.4vmin 3vmin',\r\n    size: '5vmin',\r\n    fontSize: '1.4vmin'\r\n});\r\n\r\nconst DoneButton = styled(Button)({\r\n    background: 'linear-gradient(45deg, #1760fb 30%, #45a5df 90%)',\r\n    color: 'white',\r\n    padding: '.5vmin 3vmin',\r\n    marginTop: '1vmin',\r\n    size: '5vmin',\r\n    fontSize: '1.4vmin'\r\n});\r\n\r\nconst MoreButton = styled(Button)({\r\n    background: 'linear-gradient(45deg, #0059ff 30%, #0088ff 90%)',\r\n    color: 'white',\r\n    padding: '.4vmin 4vmin',\r\n    size: '5vmin',\r\n    fontSize: '1.4vmin'\r\n});\r\n\r\nclass MyRequestsCardView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { clicked: true };\r\n        this.onClick = this.onClick.bind(this);\r\n        this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState(previousState => {\r\n            return {\r\n                succeed: !previousState.succeed\r\n            };\r\n        });\r\n    }\r\n\r\n    onClick() {\r\n        this.setState({\r\n            clicked: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const Results = () => (\r\n            <Grid container justify=\"center\">\r\n                <DoneButton size=\"small\" onClick={this.onClick} >Done!</DoneButton>\r\n            </Grid>\r\n        )\r\n        const succeed = (\r\n            <div>(253) 310-3409<br></br></div>\r\n        )\r\n        const notsucceed = (\r\n            <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                <MoreButton size=\"small\"> Edit </MoreButton>\r\n                <MyButton size=\"small\" onClick={this.onClick} >Delete</MyButton>\r\n            </div>\r\n        )\r\n\r\n        if (this.state.clicked) {\r\n            return (\r\n                <div>\r\n                    <Card className=\"cardStyle\" style={{ opacity: '.75',width: \"36vmin\", height: \"34vh\", boxShadow: \"0 8px 6px -6px #aaaaaa\", margin: \"5%\", lineHeight: \"2vmin\" }}>\r\n                        <h5 className=\"cardTitle\">My Old Request</h5>\r\n                        <p cclassName=\"cardDescription\"><br />Lorem ipsum dolor sit amet, consectetur adipis0ing elit, sed do eiusmod tempor\r\n                            incididunt ut labore </p>\r\n                        <p className=\"cardRequested\">Completed 10 days ago</p>\r\n                   \r\n       \r\n                    </Card >\r\n                </div >\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default MyRequestsCardView;\r\n\r\n\r\n//<Container maxWidth=\"xs\">\r\n//    <Cards className={useStyles.root} variant=\"outlined\">\r\n//        <CardContent>\r\n//\r\n//\r\n//        </CardContent>\r\n//        <CardActions>\r\n//            <Grid\r\n//                container\r\n//                direction=\"row\"\r\n//                justify=\"space-between\"\r\n//                alignItems=\"center\"\r\n//            >\r\n//                <div onClick={this.handleClick.bind(this)}>\r\n//                    {this.state.succeed ? succeed : notsucceed}\r\n //               </div>\r\n//\r\n\r\n  //          </Grid>\r\n\r\n    //    </CardActions>\r\n\r\n      //  {this.state.succeed ? null : <Results />}\r\n  //  </Cards>\r\n//</Container>\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport MyRequestsCardView from \"./MyRequestsCardView\";\r\nimport MyOldRequests from './MyOldRequests'\r\nimport { Button, Modal} from 'antd';\r\nimport { useHistory, NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nclass MyRequestsView extends React.Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = { dog: \"fido\", counter: 5, total: [0, 1, 2], old: false };\r\n    this.onClick = this.onClick.bind(this);\r\n    this.handleClick.bind(this);\r\n    this.doneRedirect = this.doneRedirect.bind(this);\r\n  }\r\n  handleClick() {\r\n    this.setState(previousState => {\r\n      return {\r\n        succeed: !previousState.succeed\r\n      };\r\n    });\r\n  }\r\n\r\n  /*  scrollToBottom = () => {\r\n      this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.scrollToBottom();\r\n    }\r\n  \r\n    componentDidUpdate() {\r\n      this.scrollToBottom();\r\n    }\r\n  \r\n  */\r\n\r\n  onClick() {\r\n    this.setState({\r\n      counter: this.state.counter + 1,\r\n      total: this.state.total.concat([...new Array(5)]),\r\n    });\r\n  }\r\n\r\n    // modal informing user that their submission was successful, onclick will redirect them\r\n    success() {\r\n\r\n      Modal.success({\r\n        okText:\"Done\",\r\n        title: 'You have successfully created an account!',\r\n        // content: 'View your requests to see your new entry.',\r\n        onOk() {\r\n          this.doneRedirect();\r\n        }\r\n      });\r\n    }\r\n\r\n    // redirects/reroutes to request page\r\n    doneRedirect () {\r\n      let history = useHistory();\r\n      history.push(\"/HomePageView\");\r\n    };\r\n\r\n\r\n  render() {\r\n    const succeed = (\r\n      this.state.total.map((value) =>\r\n          <MyOldRequests />\r\n        )\r\n    )\r\n    const notsucceed = (\r\n      <div>\r\n\r\n        <Button onClick={this.handleClick.bind(this)} shape=\"round\" type=\"primary\" ghost style={{\r\n          marginLeft: '5vmin', alignItems: \"center\",\r\n          marginTop: '16vmin', paddingTop: '1vmin', paddingBottom: \"3.2vmin\"\r\n        }}>Show past requests </Button>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"headerDiv\">\r\n          <h1 className=\"cardHeader\">My Requests</h1>\r\n          <p className=\"disclaimer\">Below are the requests you have made. If there are no request cards displayed, then you have not yet made a request. Click on the button below to create your request!</p>\r\n          <div style={{ display: 'flex' }}>\r\n            \r\n          <NavLink to=\"/CreateRequest\">\r\n            <Button type=\"primary\" style={{\r\n              marginLeft: '2vmin',\r\n              fontSize: '3vmin', marginTop: '0vmin', marginBottom: '3vmin', marginLeft: '3.7vmin', paddingBottom: '6vmin', paddingTop: '1', size: 'large', paddingLeft: '6vmin', paddingRight: '8vmin', textAlign: 'center'\r\n            }}>Create Request </Button>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n        <div style={{ }}>\r\n        \r\n                <MyRequestsCardView />\r\n          \r\n            {/* {this.state.succeed ? succeed : notsucceed} */}\r\n     \r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MyRequestsView;\r\n/*\r\n<div style={{ float: \"left\", clear: \"both\" }}\r\n          ref={(el) => { this.messagesEnd = el; }}>\r\n        </div>\r\n        */\r\n\r\n//     <MoreButton variant=\"outlined\" size=\"large\" onClick={this.onClick}>More</MoreButton>\r\n\r\n// onClick() {\r\n//  this.setState({\r\n//    counter: this.state.counter + 1,\r\n\r\n//  });\r\n//  let first = this.state.total[this.state.total.length - 1] + 1\r\n//  this.setState(prevState => ({\r\n//    total: [...prevState.total, first],\r\n//  }))\r\n//  this.setState(prevState => ({\r\n//   total: [...prevState.total, first + 1],\r\n//  }))\r\n//  this.setState(prevState => ({\r\n//    total: [...prevState.total, first + 2],\r\n//  }))\r\n//  this.setState(prevState => ({\r\n//    total: [...prevState.total, first + 3],\r\n//  }))\r\n//}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n<Grid container className={useStyles.root} spacing={2}>\r\n<Grid item xs={12}>\r\n  <Grid container justify=\"center\" spacing={2}>\r\n    {this.state.total.map((value) => (\r\n      <Grid key={value} item>\r\n        <YourRequestsCardView />\r\n      </Grid>\r\n    ))}\r\n  </Grid>\r\n</Grid>\r\n\r\n</Grid>\r\n*/","import React, { Component } from \"react\";\r\nimport { Carousel } from \"antd\";\r\nimport { SmileOutlined } from '@ant-design/icons';\r\nimport { Button } from \"antd\"\r\nimport SuggestedTasksCard from \"./SuggestedTasksCardView\"\r\nimport { Card, Col, Row } from 'antd';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\r\n\r\nconst MyButton = styled(Button)({\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    color: 'white',\r\n    padding: '.4vmin 3vmin',\r\n    size: '5vmin',\r\n    fontSize: '1.4vmin'\r\n});\r\n\r\nconst DoneButton = styled(Button)({\r\n    background: 'linear-gradient(45deg, #1760fb 30%, #45a5df 90%)',\r\n    color: 'white',\r\n    padding: '.5vmin 3vmin',\r\n    marginTop: '1vmin',\r\n    size: '5vmin',\r\n    fontSize: '1.4vmin'\r\n});\r\n\r\nconst MoreButton = styled(Button)({\r\n    background: 'linear-gradient(45deg, #0059ff 30%, #0088ff 90%)',\r\n    color: 'white',\r\n    padding: '.4vmin 4vmin',\r\n    size: '5vmin',\r\n    fontSize: '1.4vmin'\r\n});\r\n\r\n\r\nclass Test extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.handleClick.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.previous = this.previous.bind(this);\r\n        this.carousel = React.createRef();\r\n        this.state = { clicked: true , dog: \"fido\", counter: 0, counterEnd: 3, total: [0, 1, 2, 3, 4], fruits: [\"Banana\", \"Orange\", \"Lemon\", \"Apple\", \"Mango\", \"Pear\", \"Grapes\", \"Lime\", \"Persimmon\", \"Tomato\", \"Cucumber\", \"Watermelon\"] };\r\n\r\n    }\r\n    handleClick() {\r\n        this.setState(previousState => {\r\n            return {\r\n                succeed: !previousState.succeed\r\n            };\r\n        });\r\n    }\r\n\r\n    onClick() {\r\n        this.setState({\r\n            clicked: false\r\n        });\r\n    }\r\n    next() {\r\n        this.carousel.next();\r\n    }\r\n    previous() {\r\n        this.carousel.prev();\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const props = {\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1\r\n        };\r\n        function remove(el) {\r\n            let element = el;\r\n            element.remove();\r\n            \r\n        }\r\n        let start = 0;\r\n        let end = 4;\r\n        let fruitsize = this.state.fruits.length/4;\r\n        console.log(fruitsize)\r\n        let fruitArray = [...new Array(fruitsize)]\r\n    \r\n        return (\r\n            <div>\r\n         \r\n                <div style={{marginLeft:'22vmin'}}>\r\n\r\n                <Carousel ref={node => (this.carousel = node)} {...props}>\r\n                   \r\n                {fruitArray.map((value) =>\r\n                                    <div>\r\n                                    <div className=\"site-card-wrapper\">\r\n                                            <Row gutter={16} >\r\n                                                {this.state.fruits.slice(start, end).map((value) =>\r\n                                                    <Col span={5.5} key={value}>\r\n                                                        <Card className=\"cardStyle\" style={{ width: \"36vmin\", height: \"34vh\", boxShadow: \"0 8px 6px -6px #aaaaaa\", margin: \"5%\", lineHeight: \"2vmin\" }}>\r\n                        <h5 className=\"cardTitle\">Getting groceries for gramma</h5>\r\n                        <p cclassName=\"cardDescription\"><br />Lorem ipsum dolor sit amet, consectetur adipis0ing elit, sed do eiusmod tempor\r\n                            incididunt ut labore </p>\r\n                        <p className=\"cardRequested\">Made 10 days ago</p>\r\n                        <div className=\"buttons\" ><div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                <MoreButton size=\"small\" a rel=\"noopener noreferrer\" href=\"/\"> Edit </MoreButton>\r\n                        <MyButton size=\"small\" onClick={console.log(\"not working\")} >Delete</MyButton>\r\n            </div> </div> {value} \r\n                    </Card >\r\n                                                    </Col>)}\r\n                                            </Row>\r\n                                            {start = start + 4}\r\n                                            {end = end + 4}\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    )\r\n                                    \r\n                                    }\r\n                 \r\n                </Carousel>\r\n                           \r\n\r\n\r\n               \r\n                </div>\r\n                <div style={{display:'flex', justifyContent: 'center'}}>\r\n                            <Button size=\"large\" icon={<LeftOutlined />}  onClick={this.previous}></Button>\r\n\r\n<Button size=\"large\" icon={<RightOutlined />}  onClick={this.next}></Button>\r\n                                </div>\r\n                                <div id=\"i\" onClick=\"remove(this)\">Sample</div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Test;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Layout, Menu, Breadcrumb, Button } from 'antd';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database'; \r\n\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst HomeView = (props) => {\r\n    const handleSignOut = () => {\r\n    \r\n        /* TODO: sign out user here */\r\n        firebase.auth().signOut();\r\n        console.log('logged out!')\r\n      }\r\n\r\n      function testUser () {\r\n        console.log(\"you've reached function testUser!\")\r\n\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n          if (user) {\r\n            // User is signed in.\r\n            console.log('signed in')\r\n            // var userTesting = firebase.auth().currentUser;\r\n            // console.log(userTesting.uid);\r\n            console.log('user id is ' + user.uid)\r\n          } else {\r\n            // No user is signed in.\r\n            console.log('not signed in')\r\n    \r\n          }\r\n        });\r\n    \r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{ color: 'blue', fontSize: '50px', textAlign: \"center\"}}>Home Page ;D </h1>\r\n\r\n            <div style={{display:'flex', justifyContent: 'center'}}>\r\n                    <Link to =\"/login\">\r\n                    <Button className=\"bar-button\" type=\"primary\" a rel=\"noopener noreferrer\" href=\"/HomePageView\" style={{\r\n                            fontSize:'2vmin',\r\n                        \r\n                            size:'large', \r\n                    \r\n                            textAlign:'center'}} >Sign in </Button>\r\n                    </Link>\r\n                    <Button onClick={handleSignOut}> Logout test </Button>\r\n                    <Button onClick={testUser}> Testing user auth! </Button>\r\n             </div>\r\n        </div>\r\n        // mountNode,\r\n        )\r\n    }\r\n\r\n    export default HomeView;\r\n","import React from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst DashboardLayout = (props) => {\r\n    return (\r\n        <Layout className=\"layout\">\r\n            <Header>\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                <Menu.Item key=\"1\">Home</Menu.Item>\r\n                <Menu.Item key=\"2\">Tasks</Menu.Item>\r\n                <Menu.Item key=\"3\">Requests</Menu.Item>\r\n                <Menu.Item key=\"4\">Additional Resources</Menu.Item>\r\n            </Menu>\r\n            </Header>\r\n            <Content style={{ padding: '0 50px' }}>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                <Breadcrumb.Item>App</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">Content</div>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n        </Layout>\r\n        // mountNode,\r\n        )\r\n    }\r\n\r\n    export default DashboardLayout;\r\n","import { Form, Input, Select, Tooltip, Button, Modal } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport firebase from \"../../FirebaseUtil\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport './UserSignUpView.css';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst UserSignUpView = () => {\r\n  const onFinish = async (values) => {\r\n    console.log('Received values of form: ', values);\r\n    const authUserResponse = await firebase.app().auth().createUserWithEmailAndPassword(values.email, values.password)\r\n    console.log('authuserresponse is ' + authUserResponse)\r\n    const newUserSnapshot = await firebase.database().ref('USER/' + authUserResponse.user.uid).set({  //reference to collection \r\n      // username: name,\r\n      USER_EMAIL: values.email,\r\n      USER_DOB: values.dob, \r\n      USER_FNAME: values.firstname,\r\n      USER_LNAME: values.lastname,\r\n      USER_ID: authUserResponse.user.uid,\r\n      USER_PHONE_NUMBER: values.phonenum,\r\n      USER_CITY: values.city,\r\n      USER_STATE: values.state,\r\n      USER_STREET_ADDRESS: values.street,\r\n      USER_ZIP_CODE: values.zipcode,\r\n      // profile_picture : imageUrl\r\n    });\r\n    // console.log(newUserSnapshot.val())\r\n    // success();\r\n\r\n  };\r\n\r\n  //   // if error connecting to DB\r\n  //   const onFinishFailed = errorInfo => {\r\n  //     // add in error message\r\n  //     // connect this state to db (promise, return)\r\n  //     console.log('Failed:', errorInfo);\r\n  //   };\r\n\r\n  // // modal informing user that their submission was successful, onclick will redirect them\r\n  // function success() {\r\n\r\n  //   Modal.success({\r\n  //     okText:\"Done\",\r\n  //     title: 'Register successful!',\r\n  //     content: 'Thank you for creating an account.',\r\n  //     onOk() {\r\n  //       //something\r\n  //     }\r\n  //   });\r\n  //   console.log('modal should be appearing');\r\n\r\n  // }\r\n\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const returnRedirect = function() {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"signup-form-container\">\r\n      <h1 id=\"signup-heading\">Create an account</h1>\r\n      <p id=\"signup-return\"><a onClick={returnRedirect}>Return to login</a></p>\r\n      <Form name=\"complex-form\" onFinish={onFinish} labelCol={{ span: 8 }} wrapperCol={{ span: 16 }}>\r\n\r\n        <Form.Item label=\"Email\">\r\n          <Form.Item\r\n            name=\"email\"\r\n            noStyle\r\n            rules={[{ required: true, message: 'Email is required' }]}\r\n          >\r\n            <Input style={{ width: 320 }} placeholder=\"Please input\" type=\"email\"/>\r\n          </Form.Item>\r\n        </Form.Item>\r\n        \r\n        <Form.Item label=\"Name\">\r\n          <Form.Item\r\n            name=\"firstname\"\r\n            noStyle\r\n            rules={[{ required: true, message: 'Name is required' }]}\r\n          >\r\n            <Input style={{ width: 160 }} placeholder=\"First name\"/>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"lastname\"\r\n            noStyle\r\n            rules={[{ required: true, message: 'Name is required' }]}\r\n          >\r\n            <Input style={{ width: 160 }} placeholder=\"Last name\"/>\r\n          </Form.Item>\r\n\r\n          {/* <Tooltip title=\"Useful information\">\r\n            <a href=\"#API\" style={{ margin: '0 8px' }}>\r\n              Need Help?\r\n            </a>\r\n          </Tooltip> */}\r\n        </Form.Item>\r\n        <Form.Item label=\"Phone number\">\r\n          <Form.Item\r\n            name=\"phonenum\"\r\n\r\n            noStyle\r\n            rules={[{ len: 12, pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\", required: true, message: 'Phone number is required. Please format as: xxx-xxx-xxxx' }]}\r\n          >\r\n            <Input style={{ width: 160 }}  maxLength= '12' placeholder=\"206-123-4567\" type=\"tel\"/>\r\n          </Form.Item>\r\n        </Form.Item>\r\n        <Form.Item label=\"Date of birth\">\r\n          <Form.Item\r\n            name=\"dob\"\r\n\r\n            noStyle\r\n            rules={[{ required: true, message: 'Date of birth is required.' }]}\r\n          >\r\n            <Input style={{ width: 160 }} placeholder=\"09/01/1997\" type=\"date\"/>\r\n          </Form.Item>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Address\">\r\n          <Input.Group>\r\n            <Form.Item\r\n              name={'street'}\r\n              noStyle\r\n              rules={[{ required: true, message: 'Your full address is required.' }]}\r\n            >\r\n              <Input style={{  }} placeholder=\"Street address\"/>\r\n            </Form.Item>\r\n  \r\n            <Form.Item\r\n              name={'city'}\r\n              noStyle\r\n              rules={[{ required: true, message: 'Your full address is required.' }]}\r\n            >\r\n              <Input style={{ width: '50%' }} placeholder=\"City\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={'zipcode'}\r\n              noStyle\r\n              rules={[{ required: true, message: 'Your full address is required.' }]}\r\n            >\r\n              <Input style={{ width: '15%' }} placeholder=\"Zipcode\" maxLength='5'/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name={'state'}\r\n              noStyle\r\n              rules={[{ required: true, message: 'Your full address is required.' }]}\r\n            >\r\n              <Select placeholder=\"State\" style={{ width: '15%'}}name=\"state\" id=\"state\">\r\n                <Option value=\"\" selected=\"selected\">Select a State</Option>\r\n                <Option value=\"AL\">Alabama</Option>\r\n                <Option value=\"AK\">Alaska</Option>\r\n                <Option value=\"AZ\">Arizona</Option>\r\n                <Option value=\"AR\">Arkansas</Option>\r\n                <Option value=\"CA\">California</Option>\r\n                <Option value=\"CO\">Colorado</Option>\r\n                <Option value=\"CT\">Connecticut</Option>\r\n                <Option value=\"DE\">Delaware</Option>\r\n                <Option value=\"DC\">District Of Columbia</Option>\r\n                <Option value=\"FL\">Florida</Option>\r\n                <Option value=\"GA\">Georgia</Option>\r\n                <Option value=\"HI\">Hawaii</Option>\r\n                <Option value=\"ID\">Idaho</Option>\r\n                <Option value=\"IL\">Illinois</Option>\r\n                <Option value=\"IN\">Indiana</Option>\r\n                <Option value=\"IA\">Iowa</Option>\r\n                <Option value=\"KS\">Kansas</Option>\r\n                <Option value=\"KY\">Kentucky</Option>\r\n                <Option value=\"LA\">Louisiana</Option>\r\n                <Option value=\"ME\">Maine</Option>\r\n                <Option value=\"MD\">Maryland</Option>\r\n                <Option value=\"MA\">Massachusetts</Option>\r\n                <Option value=\"MI\">Michigan</Option>\r\n                <Option value=\"MN\">Minnesota</Option>\r\n                <Option value=\"MS\">Mississippi</Option>\r\n                <Option value=\"MO\">Missouri</Option>\r\n                <Option value=\"MT\">Montana</Option>\r\n                <Option value=\"NE\">Nebraska</Option>\r\n                <Option value=\"NV\">Nevada</Option>\r\n                <Option value=\"NH\">New Hampshire</Option>\r\n                <Option value=\"NJ\">New Jersey</Option>\r\n                <Option value=\"NM\">New Mexico</Option>\r\n                <Option value=\"NY\">New York</Option>\r\n                <Option value=\"NC\">North Carolina</Option>\r\n                <Option value=\"ND\">North Dakota</Option>\r\n                <Option value=\"OH\">Ohio</Option>\r\n                <Option value=\"OK\">Oklahoma</Option>\r\n                <Option value=\"OR\">Oregon</Option>\r\n                <Option value=\"PA\">Pennsylvania</Option>\r\n                <Option value=\"RI\">Rhode Island</Option>\r\n                <Option value=\"SC\">South Carolina</Option>\r\n                <Option value=\"SD\">South Dakota</Option>\r\n                <Option value=\"TN\">Tennessee</Option>\r\n                <Option value=\"TX\">Texas</Option>\r\n                <Option value=\"UT\">Utah</Option>\r\n                <Option value=\"VT\">Vermont</Option>\r\n                <Option value=\"VA\">Virginia</Option>\r\n                <Option value=\"WA\">Washington</Option>\r\n                <Option value=\"WV\">West Virginia</Option>\r\n                <Option value=\"WI\">Wisconsin</Option>\r\n                <Option value=\"WY\">Wyoming</Option>\r\n              </Select>\r\n            </Form.Item>\r\n\r\n          </Input.Group>\r\n        </Form.Item>\r\n\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            { min: 6, message: 'Password must be minimum 5 characters.' },\r\n            {\r\n              required: true,\r\n              message: 'Please input your password!',\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password style={{ width: 320}} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirm Password\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            { min: 6, message: 'Password must be minimum 5 characters.' },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject('The two passwords that you entered do not match!');\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password style={{ width: 320}}/>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default UserSignUpView;","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\nimport '../App.css'\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n\r\nclass HomePageView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicked: true,\r\n            currentUser: null,\r\n            users: [],\r\n            tasks: []\r\n        };\r\n    };\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n\r\n            var currentUserId;\r\n\r\n            if (user) {\r\n                console.log('This is the user: ', user.uid)\r\n                currentUserId = user.uid;\r\n                this.setState({ currentUser: currentUserId })\r\n                // User is signed in.\r\n            } else {\r\n                // No user is signed in.\r\n                console.log(\"user is not logged in!\")\r\n                currentUserId = null;\r\n            }\r\n        })\r\n        this.userRef = firebase.database().ref('USER');\r\n        this.userRef.on('value', (snapshot) => {\r\n            let value = snapshot.val();\r\n            this.setState({ users: value });\r\n        });\r\n\r\n        this.taskRef = firebase.database().ref('CLAIMED_TASK');\r\n        this.taskRef.on('value', (snapshot) => {\r\n            let value = snapshot.val();\r\n            this.setState({ tasks: value });\r\n        });\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.userRef.off();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        let userKeys = Object.keys(this.state.users);\r\n        let mappedKeys = userKeys.map((key) => {\r\n            let userObj = this.state.users[key];\r\n            userObj.id = key;\r\n            return userObj;\r\n        });\r\n\r\n        let taskKeys = Object.keys(this.state.tasks);\r\n        let mappedtaskKeys = taskKeys.map((key) => {\r\n            let taskObj = this.state.tasks[key];\r\n            taskObj.id = key;\r\n            return taskObj;\r\n        });\r\n\r\n        let uObj = ''\r\n        let userItems = mappedKeys.map((userObj) => {\r\n            if (this.state.currentUser == userObj.USER_ID) {\r\n                uObj = userObj;\r\n            }\r\n        });\r\n\r\n        let tObj = []\r\n        let taskItems = mappedtaskKeys.map((taskObj) => {\r\n            if (taskObj.TASK_STATUS == 'complete')\r\n            tObj.push(taskObj);\r\n        });\r\n\r\n        let utObj = []\r\n        let utaskItems = mappedtaskKeys.map((taskObj) => {\r\n            if (taskObj.USER_ID == this.state.currentUser & taskObj.TASK_STATUS == 'complete')\r\n            utObj.push(taskObj);\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div><HomePage user={uObj} task={tObj} usertask={utObj}/></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let userObj = this.props.user;\r\n        let taskObj = this.props.task\r\n        let usertaskObj = this.props.usertask;\r\n        console.log(usertaskObj.length)\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"homepageBody\">\r\n                <div className=\"greeting\">\r\n                    <h1 className=\"homePageHeader\">Hello, {userObj.USER_FNAME}!</h1>\r\n                    <div id=\"homepage-descrip\">\r\n                        <p>Our community has completed <b>{taskObj.length} task(s) </b>so far to help the people in need.</p>\r\n                        <p>You have helped <b>{usertaskObj.length} people </b>so far. Would you like to make it <b>{usertaskObj.length + 1} </b>today?</p>\r\n                    </div>\r\n                </div>\r\n                <div className='options'>\r\n                    <div className='needHelp'>\r\n                        <h1 className='homePageSubH'>I want to help out...</h1>\r\n                        <div className=\"homePageButtons\" style={{ display: 'flex' }}>\r\n                            <Button className=\"bar-button\" type=\"primary\" style={{\r\n                                fontSize: '3vmin',\r\n                                marginTop: '1vmin',\r\n                                paddingBottom: '6vmin',\r\n                                paddingTop: '2vmin',\r\n                                width: '110%',\r\n                                textAlign: 'center',\r\n                                borderRadius: '5px',\r\n                                fontWeight: 'bolder'\r\n                            }} href=\"ClaimedTasks\" >Claimed tasks </Button>\r\n\r\n                            <Button className=\"bar-button\" type=\"primary\" style={{\r\n                                fontSize: '3vmin',\r\n                                marginTop: '1vmin',\r\n                                paddingBottom: '6vmin',\r\n                                paddingTop: '2vmin',\r\n                                width: '110%',\r\n                                textAlign: 'center',\r\n                                borderRadius: '5px',\r\n                                fontWeight: 'bolder'\r\n                            }} href=\"SuggestedTasks\">Find more tasks</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className='helpOthers'>\r\n                        <h1 className='homePageSubH'>I need some help...</h1>\r\n                        <div className=\"homePageRequestButtons\">\r\n                            <div className=\"homePageButtons\" style={{ display: 'flex' }}>\r\n                                <Button className=\"bar-button\" type=\"primary\" style={{\r\n                                    fontSize: '3vmin',\r\n                                    marginTop: '1vmin',\r\n                                    paddingBottom: '6vmin',\r\n                                    paddingTop: '2vmin',\r\n                                    width: '110%',\r\n                                    textAlign: 'center',\r\n                                    borderRadius: '5px',\r\n                                    fontWeight: 'bolder'\r\n                                }} href=\"MyRequests\">My requests </Button>\r\n                                <Button className=\"bar-button\" type=\"primary\" style={{\r\n                                    fontSize: '3vmin',\r\n                                    marginTop: '1vmin',\r\n                                    paddingBottom: '6vmin',\r\n                                    paddingTop: '2vmin',\r\n                                    width: '110%',\r\n                                    textAlign: 'center',\r\n                                    borderRadius: '5px',\r\n                                    fontWeight: 'bolder'\r\n                                }}href=\"CreateRequest\">Create new request</Button>\r\n                            </div>\r\n                            <Button className=\"bar-button\" type=\"primary\" style={{\r\n                                marginLeft: '3vmin',\r\n                                fontSize: '3vmin',\r\n                                borderColor: 'gray',\r\n                                backgroundColor: 'gray',\r\n                                marginTop: '1vmin',\r\n                                marginLeft: '4vmin',\r\n                                paddingBottom: '6vmin',\r\n                                paddingTop: '2vmin',\r\n                                paddingLeft: '2.5vmin',\r\n                                paddingRight: '2.5vmin',\r\n                                textAlign: 'center',\r\n                                borderRadius: '5px',\r\n                                fontWeight: 'bolder'\r\n                            }}href=\"AdditionalResources\">Additional Resources </Button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePageView;\r\n","import React, { Component } from 'react';\r\nimport './AdditionalResources.css';\r\nimport { Button } from 'antd';\r\n\r\nconst AdditionalResourcesView = (props) => {\r\n\r\n    return (\r\n        <div className=\"additionalResourcesBody\">\r\n            <div className=\"heading\">\r\n                <h1 className=\"additionalResourcesHeader\" style={{fontSize: 40, fontWeight: 700}}>Additional Resources</h1>\r\n                <div id=\"additionalResources-descrip\">\r\n                    <p>If you're seeking additional information about the crisis, please navigate to the external sources below.</p>\r\n                </div>\r\n            </div>\r\n        \r\n        <div className=\"options\">\r\n            <div style={{display:'flex', flexWrap:\"wrap\"}}>\r\n                <Button className=\"bar-button\" type=\"primary\" style={{\r\n                    fontSize: '3vmin',\r\n                    marginTop: '1vmin',\r\n                    marginRight: '60%',\r\n                    paddingBottom: '6vmin',\r\n                    paddingTop: '2vmin',\r\n                    width: '400px',\r\n                    textAlign: 'center',\r\n                    borderRadius: '5px',\r\n                    fontWeight: 'bolder',\r\n                }} a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\">WHO Resources \r\n                </Button>\r\n                <Button className=\"bar-button\" type=\"primary\" style={{\r\n                    fontSize: '3vmin',\r\n                    marginTop: '1vmin',\r\n                    marginRight: '60%',\r\n                    paddingBottom: '6vmin',\r\n                    paddingTop: '2vmin',\r\n                    width: '400px',\r\n                    textAlign: 'center',\r\n                    borderRadius: '5px',\r\n                    fontWeight: 'bolder'\r\n                }} a href=\"https://www.usda.gov/coronavirus\"> USDA Resources\r\n                </Button>\r\n                <Button className=\"bar-button\" type=\"primary\" style={{\r\n                    fontSize: '3vmin',\r\n                    marginTop: '1vmin',\r\n                    marginRight: '60%',\r\n                    paddingBottom: '6vmin',\r\n                    paddingTop: '2vmin',\r\n                    width: '400px',\r\n                    textAlign: 'center',\r\n                    borderRadius: '5px',\r\n                    fontWeight: 'bolder'\r\n                }} a href=\"https://www.cdc.gov/coronavirus/2019-ncov/index.html\"> CDC Resources\r\n                </Button>\r\n                <Button className=\"bar-button\" type=\"primary\" style={{\r\n                    fontSize: '3vmin',\r\n                    marginTop: '1vmin',\r\n                    marginRight: '60%',\r\n                    paddingBottom: '6vmin',\r\n                    paddingTop: '2vmin',\r\n                    width: '400px',\r\n                    textAlign: 'center',\r\n                    borderRadius: '5px',\r\n                    fontWeight: 'bolder'\r\n                }} a href=\"https://kingcounty.gov/depts/health/communicable-diseases/disease-control/novel-coronavirus.aspx\"> King County Resources\r\n                </Button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdditionalResourcesView;","import React, { useEffect, useState } from \"react\";\r\nimport app from \"./FirebaseUtil/index\"\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    app.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n    });\r\n  }, []);\r\n\r\n  if(pending){\r\n    return <>Loading...</>\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/login\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute","\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Dropdown, Button } from 'antd';\r\nimport styles from './App.css';\r\nimport './test.css';\r\n///import Dashboard from './containers/Dashboard/Dashboard';\r\nimport SuggestedTasks from './components/SuggestedTasks/SuggestedTasks';\r\nimport ClaimedTasks from './components/ClaimedTasks/ClaimedTasksView';\r\nimport CreateNewRequestView from './components/CreateNewRequest/CreateNewRequestView';\r\nimport UserLoginView from './components/UserLogin/UserLoginView';\r\nimport MyRequests from './components/MyRequests/MyRequestsView';\r\nimport Test from './components/SuggestedTasks/test';\r\nimport logo from './logo.png';\r\nimport DashboardLayout from './components/DashboardLayout/DashboardLayout';\r\nimport HomeView from './components/HomeView';\r\nimport SignUpView from './components/UserSignUp/UserSignUpView'\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport HomePageView from './components/HomePageView';\r\nimport AdditionalResourcesView from './components/AdditionalResources/AdditionalResourcesView'\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database'; \r\nimport { AuthProvider } from \"./Auth\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport 'firebase/database'; \r\n\r\n\r\n\r\n\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nconst handleSignOut = () => {\r\n    \r\n  /* TODO: sign out user here */\r\n  firebase.auth().signOut();\r\n  console.log('logged out!')\r\n}\r\n\r\n\r\n\r\nconst menuTasks = (\r\n  <Menu>\r\n    <Menu.Item>\r\n    <a rel=\"noopener noreferrer\" href=\"/ClaimedTasks\"> My claimed tasks </a>\r\n    </Menu.Item>\r\n    <Menu.Item> <a rel=\"noopener noreferrer\" href=\"/SuggestedTasks\"> Find new tasks </a>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nconst menuRequests = (\r\n  <Menu>\r\n    <Menu.Item>\r\n    <a rel=\"noopener noreferrer\" href=\"/MyRequests\"> My requests </a>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n    <a rel=\"noopener noreferrer\" href=\"/CreateRequest\"> Create a request </a>\r\n    </Menu.Item>\r\n\r\n  </Menu>\r\n);\r\n\r\nconst menuWelcome = (\r\n  <Menu>\r\n    <Menu.Item>\r\n    <Button onClick={handleSignOut}> Logout </Button>\r\n\r\n    </Menu.Item>\r\n  </Menu>\r\n)\r\n\r\nconst App = () => {\r\n  const isAuthenticated = () => {\r\n    // Perform authentication logic once user handling on backend is set up\r\n    return true\r\n  }\r\n\r\n  //A callback function for logging out the current user\r\n  const handleSignOut = () => {\r\n    // this.setState({errorMessage:null}); //clear any old errors\r\n\r\n    /* TODO: sign out user here */\r\n    firebase.auth().signOut();\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        <Layout>\r\n          <Menu theme=\"light\" mode=\"horizontal\" style={{ boxShadow: \"0px 0px 9px 3px rgba(41,41,41,.25)\", height: \"10vh\", paddingTop: \"1.6vh\", alignItems: \"center\" }} defaultSelectedKeys={['2']}>\r\n            <Menu.Item key=\"1\" style={{ alignItems: \"center\" }}><span> <Menu.Item key=\"1\"><span><img src={logo} alt=\"Smiley face\" height=\"50\" /></span><Link to=\"/HomePageView\" />\r\n            </Menu.Item></span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n              <Dropdown overlay={menuTasks}>\r\n              <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                Tasks <DownOutlined />\r\n              </a>\r\n              </Dropdown>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\"><Dropdown overlay={menuRequests}>\r\n              <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                Requests <DownOutlined />\r\n              </a>\r\n            </Dropdown>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"4\">Additional Resources\r\n                <Link to=\"/AdditionalResources\" /></Menu.Item>\r\n            <Menu.Item key=\"5\" style={{ float: \"right\" }}><Dropdown overlay={menuWelcome}>\r\n              <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                Welcome Back!     <DownOutlined />\r\n              </a>\r\n            </Dropdown>\r\n                </Menu.Item>\r\n          </Menu>\r\n          <Content style={{ margin: '24px 16px', padding: 24, background: '#F1F4F6', minHeight: 280 }}>\r\n            <AuthProvider>\r\n            <PrivateRoute exact path=\"/\" component={HomeView} />\r\n            <PrivateRoute path=\"/ClaimedTasks\" component={ClaimedTasks} />\r\n            <PrivateRoute path=\"/AdditionalResources\" component={AdditionalResourcesView} />\r\n            <PrivateRoute path=\"/MyRequests\" component={MyRequests} />\r\n            <PrivateRoute path=\"/HomePageView\" component={HomePageView} />\r\n            <PrivateRoute path=\"/CreateRequest\" component={CreateNewRequestView} />\r\n            <PrivateRoute exact path=\"/SuggestedTasks\" component={SuggestedTasks} />\r\n            <Route path=\"/login\" component={UserLoginView} />\r\n            <Route path=\"/signup\" component={SignUpView} />\r\n            </AuthProvider>\r\n\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\n//            <Route path=\"/SuggestedTasks\" component={SuggestedTasks} />\r\n\r\n//import { BrowserRouter, Route, Switch, Redirect, useHistory } from \"react-router-dom\";\r\n//import logo from './logo.svg';\r\n//import { Button } from 'antd';\r\n//import './App.css';\r\n//import DashboardLayout from './components/DashboardLayout/DashboardLayout';\r\n//import YourRequests from './components/YourRequests/YourRequests';\r\n\r\n//const App = () => {\r\n//const isAuthenticated = () => {\r\n// Perform authentication logic once user handling on backend is set up\r\n//return true\r\n// }\r\n//return (\r\n// <BrowserRouter>\r\n//   <Switch>\r\n//   <Route exact path=\"/home\" component={DashboardLayout} />\r\n// <Route exact path=\"/yourrequests\" component={YourRequests} />\r\n\r\n// </Switch>\r\n// </BrowserRouter>\r\n//)\r\n//}\r\n\r\n// const AuthedRoute = ({ component: Component, ...rest }) => (\r\n//   <Route\r\n//     {...rest}\r\n//     render={props => isAuthenticated()\r\n//       ? (\r\n//         <Component {...props} />\r\n//       ) : (\r\n//         <Redirect to={{ pathname: \"/login\" }} />\r\n//       )\r\n//     }\r\n//   >\r\n//   </Route>\r\n// );\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { render } from 'react-dom';\r\nimport { DatePicker, message } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import firebase from './firebase/app';\r\n// import 'firebase/auth';\r\n// import 'firebase/database';\r\n\r\n\r\n// const App = () => {\r\n//   const [date, setDate] = useState(null);\r\n//   const handleChange = value => {\r\n//     message.info(`Selected Date: ${value ? value.format('YYYY-MM-DD') : 'None'}`);\r\n//     setDate(value);\r\n//   };\r\n//   return (\r\n//     <div style={{ width: 400, margin: '100px auto' }}>\r\n//       <DatePicker onChange={handleChange} />\r\n//       <div style={{ marginTop: 16 }}>\r\n//         Selected Date: {date ? date.format('YYYY-MM-DD') : 'None'}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}