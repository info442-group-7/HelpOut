import React, { Component, MouseEventHandler } from 'react';
export declare type SwitchChangeEventHandler = (checked: boolean, event: MouseEvent) => void;
export declare type SwitchClickEventHandler = SwitchChangeEventHandler;
interface SwitchProps {
    className?: string;
    prefixCls?: string;
    disabled?: boolean;
    checkedChildren?: React.ReactNode;
    unCheckedChildren?: React.ReactNode;
    onChange?: SwitchChangeEventHandler;
    onMouseUp: MouseEventHandler<HTMLButtonElement>;
    onClick?: SwitchClickEventHandler;
    tabIndex?: number;
    checked?: boolean;
    defaultChecked?: boolean;
    autoFocus?: boolean;
    loadingIcon: React.ReactNode;
    style?: React.CSSProperties;
    title?: string;
}
interface SwitchState {
    checked: boolean;
}
declare class Switch extends Component<SwitchProps, SwitchState> {
    private node;
    static defaultProps: {
        prefixCls: string;
        checkedChildren: any;
        unCheckedChildren: any;
        className: string;
        defaultChecked: boolean;
    };
    constructor(props: any);
    componentDidMount(): void;
    static getDerivedStateFromProps(nextProps: any): Partial<SwitchState>;
    setChecked(checked: any, e: any): void;
    handleClick: (e: any) => void;
    handleKeyDown: (e: any) => void;
    handleMouseUp: (e: any) => void;
    focus(): void;
    blur(): void;
    render(): JSX.Element;
}
export default Switch;
