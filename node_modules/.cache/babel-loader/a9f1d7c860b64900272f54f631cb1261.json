{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\workworkwork\\\\Documents\\\\school\\\\coop\\\\HelpOut2\\\\HelpOut\\\\src\\\\components\\\\SuggestedTasks\\\\test.jsx\";\nimport { List, Avatar, Button, Skeleton } from 'antd';\nimport React from 'react';\nconst count = 3;\nconst fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat&noinfo`;\nconst datas = [{\n  title: 'Ant Design Title 1'\n}, {\n  title: 'Ant Design Title 2'\n}, {\n  title: 'Ant Design Title 3'\n}, {\n  title: 'Ant Design Title 4'\n}, {\n  title: 'Ant Design Title 4'\n}, {\n  title: 'Ant Design Title 4'\n}, {\n  title: 'Ant Design Title 4'\n}, {\n  title: 'Ant Design Title 4'\n}, {\n  title: 'Ant Design Title 4'\n}];\n\nclass Test extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      initLoading: true,\n      loading: false,\n      data: [],\n      list: []\n    };\n    this.getData = datas;\n\n    this.onLoadMore = () => {\n      this.setState({\n        loading: true,\n        list: this.state.data.concat([...new Array(count)].map(() => ({\n          loading: true,\n          name: {}\n        })))\n      });\n      this.getData(res => {\n        const data = this.state.data.concat(res.results);\n        this.setState({\n          data,\n          list: data,\n          loading: false\n        }, () => {\n          // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n          // In real scene, you can using public method of react-virtualized:\n          // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n          window.dispatchEvent(new Event('resize'));\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      initLoading,\n      loading,\n      list\n    } = this.state;\n    const loadMore = !initLoading && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: 12,\n        height: 32,\n        lineHeight: '32px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onLoadMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"loading more\")) : null;\n    return /*#__PURE__*/React.createElement(List, {\n      className: \"demo-loadmore-list\",\n      loading: initLoading,\n      itemLayout: \"horizontal\",\n      loadMore: loadMore,\n      dataSource: list,\n      renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n        actions: [/*#__PURE__*/React.createElement(\"a\", {\n          key: \"list-loadmore-edit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 35\n          }\n        }, \"edit\"), /*#__PURE__*/React.createElement(\"a\", {\n          key: \"list-loadmore-more\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 73\n          }\n        }, \"more\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        avatar: true,\n        title: false,\n        loading: item.loading,\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }\n        }),\n        title: /*#__PURE__*/React.createElement(\"a\", {\n          href: \"https://ant.design\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 40\n          }\n        }, item.name.last),\n        description: \"Ant Design, a design language for background applications, is refined by Ant UED Team\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }\n      }, \"content\"))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["C:/Users/workworkwork/Documents/school/coop/HelpOut2/HelpOut/src/components/SuggestedTasks/test.jsx"],"names":["List","Avatar","Button","Skeleton","React","count","fakeDataUrl","datas","title","Test","Component","state","initLoading","loading","data","list","getData","onLoadMore","setState","concat","Array","map","name","res","results","window","dispatchEvent","Event","render","loadMore","textAlign","marginTop","height","lineHeight","item","last"],"mappings":"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","sourcesContent":["import { List, Avatar, Button, Skeleton } from 'antd';\r\nimport React from 'react';\r\n\r\nconst count = 3;\r\nconst fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat&noinfo`;\r\nconst datas = [\r\n    {\r\n        title: 'Ant Design Title 1',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 2',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 3',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n    },\r\n];\r\n\r\nclass Test extends React.Component {\r\n    state = {\r\n        initLoading: true,\r\n        loading: false,\r\n        data: [],\r\n        list: [],\r\n    };\r\n\r\n    \r\n\r\n  \r\n\r\n    getData  =\r\n        datas\r\n            \r\n    ;\r\n\r\n    onLoadMore = () => {\r\n        this.setState({\r\n            loading: true,\r\n            list: this.state.data.concat([...new Array(count)].map(() => ({ loading: true, name: {} }))),\r\n        });\r\n        this.getData(res => {\r\n            const data = this.state.data.concat(res.results);\r\n            this.setState(\r\n                {\r\n                    data,\r\n                    list: data,\r\n                    loading: false,\r\n                },\r\n                () => {\r\n                    // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\r\n                    // In real scene, you can using public method of react-virtualized:\r\n                    // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\r\n                    window.dispatchEvent(new Event('resize'));\r\n                },\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { initLoading, loading, list } = this.state;\r\n        const loadMore =\r\n            !initLoading && !loading ? (\r\n                <div\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginTop: 12,\r\n                        height: 32,\r\n                        lineHeight: '32px',\r\n                    }}\r\n                >\r\n                    <Button onClick={this.onLoadMore}>loading more</Button>\r\n                </div>\r\n            ) : null;\r\n\r\n        return (\r\n            <List\r\n                className=\"demo-loadmore-list\"\r\n                loading={initLoading}\r\n                itemLayout=\"horizontal\"\r\n                loadMore={loadMore}\r\n                dataSource={list}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                        actions={[<a key=\"list-loadmore-edit\">edit</a>, <a key=\"list-loadmore-more\">more</a>]}\r\n                    >\r\n                        <Skeleton avatar title={false} loading={item.loading} active>\r\n                            <List.Item.Meta\r\n                                avatar={\r\n                                    <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                                }\r\n                                title={<a href=\"https://ant.design\">{item.name.last}</a>}\r\n                                description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n                            />\r\n                            <div>content</div>\r\n                        </Skeleton>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}