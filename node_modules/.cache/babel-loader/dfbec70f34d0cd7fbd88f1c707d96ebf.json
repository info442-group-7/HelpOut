{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\workworkwork\\\\Documents\\\\school\\\\coop\\\\HelpOut2\\\\HelpOut\\\\src\\\\components\\\\SuggestedTasks\\\\test.jsx\";\nimport React from 'react';\nimport { List, message, Avatar, Spin } from 'antd';\nimport reqwest from 'reqwest';\nimport InfiniteScroll from 'react-infinite-scroller';\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\nconst count = 3;\nconst datas = [{\n  title: 'Ant Design Title 1'\n}, {\n  title: 'Ant Design Title 2'\n}, {\n  title: 'Ant Design Title 3'\n}, {\n  title: 'Ant Design Title 4'\n}, {\n  title: 'Ant Design Title 4'\n}, {\n  title: 'Ant Design Title 4'\n}, {\n  title: 'Ant Design Title 4'\n}, {\n  title: 'Ant Design Title 4'\n}, {\n  title: 'Ant Design Title 4'\n}];\n\nclass Test extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      loading: false,\n      hasMore: true\n    };\n\n    this.fetchData = callback => {\n      reqwest({\n        url: fakeDataUrl,\n        type: 'json',\n        method: 'get',\n        contentType: 'application/json',\n        success: res => {\n          callback(res);\n        }\n      });\n    };\n\n    this.handleInfiniteOnLoad = () => {\n      let {\n        data\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n\n      if (data.length > 14) {\n        message.warning('Infinite List loaded all');\n        this.setState({\n          hasMore: false,\n          loading: false\n        });\n        return;\n      }\n\n      this.fetchData(res => {\n        data = data.concat(res.results);\n        this.setState({\n          data,\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData(res => {\n      this.setState({\n        data: res.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-infinite-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      initialLoad: false,\n      pageStart: 0,\n      loadMore: this.handleInfiniteOnLoad,\n      hasMore: !this.state.loading && this.state.hasMore,\n      useWindow: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dataSource: this.state.data,\n      renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }\n        }),\n        title: /*#__PURE__*/React.createElement(\"a\", {\n          href: \"https://ant.design\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 30\n          }\n        }, item.name.last),\n        description: item.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, \"Content\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, this.state.loading && this.state.hasMore && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-loading-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Spin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    })))));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["C:/Users/workworkwork/Documents/school/coop/HelpOut2/HelpOut/src/components/SuggestedTasks/test.jsx"],"names":["React","List","message","Avatar","Spin","reqwest","InfiniteScroll","fakeDataUrl","count","datas","title","Test","Component","state","data","loading","hasMore","fetchData","callback","url","type","method","contentType","success","res","handleInfiniteOnLoad","setState","length","warning","concat","results","componentDidMount","render","item","id","name","last","email"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { List, message, Avatar, Spin } from 'antd';\r\nimport reqwest from 'reqwest';\r\n\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\r\n\r\nconst count = 3;\r\n\r\nconst datas = [\r\n    {\r\n        title: 'Ant Design Title 1',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 2',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 3',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n    },\r\n];\r\n\r\nclass Test extends React.Component {\r\n    state = {\r\n        data: [],\r\n        loading: false,\r\n        hasMore: true,\r\n      };\r\n    \r\n      componentDidMount() {\r\n        this.fetchData(res => {\r\n          this.setState({\r\n            data: res.results,\r\n          });\r\n        });\r\n      }\r\n    \r\n      fetchData = callback => {\r\n        reqwest({\r\n          url: fakeDataUrl,\r\n          type: 'json',\r\n          method: 'get',\r\n          contentType: 'application/json',\r\n          success: res => {\r\n            callback(res);\r\n          },\r\n        });\r\n      };\r\n    \r\n      handleInfiniteOnLoad = () => {\r\n        let { data } = this.state;\r\n        this.setState({\r\n          loading: true,\r\n        });\r\n        if (data.length > 14) {\r\n          message.warning('Infinite List loaded all');\r\n          this.setState({\r\n            hasMore: false,\r\n            loading: false,\r\n          });\r\n          return;\r\n        }\r\n        this.fetchData(res => {\r\n          data = data.concat(res.results);\r\n          this.setState({\r\n            data,\r\n            loading: false,\r\n          });\r\n        });\r\n      };\r\n    \r\n      render() {\r\n        return (\r\n          <div className=\"demo-infinite-container\">\r\n            <InfiniteScroll\r\n              initialLoad={false}\r\n              pageStart={0}\r\n              loadMore={this.handleInfiniteOnLoad}\r\n              hasMore={!this.state.loading && this.state.hasMore}\r\n              useWindow={false}\r\n            >\r\n              <List\r\n                dataSource={this.state.data}\r\n                renderItem={item => (\r\n                  <List.Item key={item.id}>\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                      }\r\n                      title={<a href=\"https://ant.design\">{item.name.last}</a>}\r\n                      description={item.email}\r\n                    />\r\n                    <div>Content</div>\r\n                  </List.Item>\r\n                )}\r\n              >\r\n                {this.state.loading && this.state.hasMore && (\r\n                  <div className=\"demo-loading-container\">\r\n                    <Spin />\r\n                  </div>\r\n                )}\r\n              </List>\r\n            </InfiniteScroll>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}