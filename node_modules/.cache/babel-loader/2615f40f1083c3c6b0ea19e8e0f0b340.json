{"ast":null,"code":"var _jsxFileName = \"/Users/jamie/Desktop/HelpOut/HelpOut/src/App.jsx\";\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Redirect, useHistory } from \"react-router-dom\";\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\nimport { Home } from \"./routes/home\"; // pre: none\n// post: Returns the JSX for the current view of the overall app\n\nconst App = () => {\n  const isAuthenticated = () => {\n    // Perform authentication logic once user handling on backend is set up\n    return true;\n  };\n\n  const AuthedRoute = ({\n    component: Component,\n    ...rest\n  }) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isAuthenticated() ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  })); // return (\n  //   <BrowserRouter>\n  //     <switch>\n  //       <Route exact path=\"/login\" component={Login} />\n  //       <Route exact path=\"/register\" component={Register} />\n  //       <Route exact path=\"/home\" component={Home} />\n  //       <Route exact path=\"/accounts\" component={Accounts} />\n  //       <Route exact path=\"/fraudhistory\" component={FraudHistory} />\n  //       <Route exact path=\"/yourcredentials\" component={YourCredentials} />\n  //     </switch>\n  //   </BrowserRouter>\n  // )\n\n};\n\nexport default App;\n/* export default AppController;*/","map":{"version":3,"sources":["/Users/jamie/Desktop/HelpOut/HelpOut/src/App.jsx"],"names":["React","BrowserRouter","Route","Redirect","useHistory","Home","App","isAuthenticated","AuthedRoute","component","Component","rest","props","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,kBAA3D;AACA,OAAO,oBAAP,C,CAA6B;;AAC7B,SAASC,IAAT,QAAqB,eAArB,C,CAGA;AACA;;AACA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,eAAe,GAAG,MAAM;AAC5B;AACA,WAAO,IAAP;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAG,CAAC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAD,kBAClB,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IAAIL,eAAe,kBAE5B,oBAAC,SAAD,oBAAeK,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAF4B,gBAI5B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CANgB,CAoBhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CAhCD;;AAkCA,eAAeP,GAAf;AAEA","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Redirect, useHistory } from \"react-router-dom\";\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport { Home } from \"./routes/home\";\n\n\n// pre: none\n// post: Returns the JSX for the current view of the overall app\nconst App = () => {\n  const isAuthenticated = () => {\n    // Perform authentication logic once user handling on backend is set up\n    return true\n  }\n\n  const AuthedRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={props => isAuthenticated()\n        ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/login\" }} />\n        )\n      }\n    >\n    </Route>\n  );\n\n  // return (\n  //   <BrowserRouter>\n  //     <switch>\n  //       <Route exact path=\"/login\" component={Login} />\n  //       <Route exact path=\"/register\" component={Register} />\n  //       <Route exact path=\"/home\" component={Home} />\n  //       <Route exact path=\"/accounts\" component={Accounts} />\n  //       <Route exact path=\"/fraudhistory\" component={FraudHistory} />\n  //       <Route exact path=\"/yourcredentials\" component={YourCredentials} />\n  //     </switch>\n  //   </BrowserRouter>\n  // )\n}\n\nexport default App;\n\n/* export default AppController;*/\n"]},"metadata":{},"sourceType":"module"}